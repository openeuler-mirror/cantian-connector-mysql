/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: tc_db.proto */

#ifndef PROTOBUF_C_tc_5fdb_2eproto__INCLUDED
#define PROTOBUF_C_tc_5fdb_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct TcDb__CtcDDLColumnDataTypeDef TcDb__CtcDDLColumnDataTypeDef;
typedef struct TcDb__CtcDDLColumnDef TcDb__CtcDDLColumnDef;
typedef struct TcDb__CtcDDLForeignKeyElementDef TcDb__CtcDDLForeignKeyElementDef;
typedef struct TcDb__CtcDDLForeignKeyDef TcDb__CtcDDLForeignKeyDef;
typedef struct TcDb__CtcDDLTableKeyPart TcDb__CtcDDLTableKeyPart;
typedef struct TcDb__CtcDDLTableKey TcDb__CtcDDLTableKey;
typedef struct TcDb__CtcMsgCommDef TcDb__CtcMsgCommDef;
typedef struct TcDb__CtcDDLPartitionTableDef TcDb__CtcDDLPartitionTableDef;
typedef struct TcDb__CtcDDLPartitionDef TcDb__CtcDDLPartitionDef;
typedef struct TcDb__CtcDDLCreateTableDef TcDb__CtcDDLCreateTableDef;
typedef struct TcDb__CtcDDLAlterTablePorp TcDb__CtcDDLAlterTablePorp;
typedef struct TcDb__CtcDDLAlterTableDrop TcDb__CtcDDLAlterTableDrop;
typedef struct TcDb__CtcDDLAlterTableDropKey TcDb__CtcDDLAlterTableDropKey;
typedef struct TcDb__CtcDDLAlterTableAlterColumn TcDb__CtcDDLAlterTableAlterColumn;
typedef struct TcDb__CtcDDLAlterTableDef TcDb__CtcDDLAlterTableDef;
typedef struct TcDb__CtcDDLTruncateTableDef TcDb__CtcDDLTruncateTableDef;
typedef struct TcDb__CtcDDLTruncateTablePartitionDef TcDb__CtcDDLTruncateTablePartitionDef;
typedef struct TcDb__CtcDDLRenameTableDef TcDb__CtcDDLRenameTableDef;
typedef struct TcDb__CtcDDLDropTableDef TcDb__CtcDDLDropTableDef;
typedef struct TcDb__CtcDDLAlterIndexDef TcDb__CtcDDLAlterIndexDef;
typedef struct TcDb__CtcDDLAutoExtendDef TcDb__CtcDDLAutoExtendDef;
typedef struct TcDb__CtcDDLDataFileDef TcDb__CtcDDLDataFileDef;
typedef struct TcDb__CtcDDLSpaceDef TcDb__CtcDDLSpaceDef;
typedef struct TcDb__CtcDDLDropSpaceDef TcDb__CtcDDLDropSpaceDef;
typedef struct TcDb__CtcDDLAlterSpaceDef TcDb__CtcDDLAlterSpaceDef;


/* --- enums --- */


/* --- messages --- */

struct  TcDb__CtcDDLColumnDataTypeDef
{
  ProtobufCMessage base;
  /*
   * These definitions is same as the `typmode_t`; thus they should
   * be replaced by typmode_t for unifying the definition of columns
   */
  /*
   * ct_type_t
   */
  int32_t datatype;
  uint32_t size;
  uint32_t precision;
  int32_t scale;
  int32_t mysql_ori_datatype;
};
#define TC_DB__CTC_DDLCOLUMN_DATA_TYPE_DEF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddlcolumn_data_type_def__descriptor) \
    , 0, 0, 0, 0, 0 }


struct  TcDb__CtcDDLColumnDef
{
  ProtobufCMessage base;
  char *name;
  TcDb__CtcDDLColumnDataTypeDef *datatype;
  uint32_t is_option_set;
  uint32_t col_id;
  char *cons_name;
  char *ref_user;
  char *ref_table;
  char *default_text;
  char *comment;
  /*
   * ctc_alter_column_alter_mode
   */
  uint32_t alter_mode;
  uint64_t collate;
  char *new_name;
  uint32_t is_unsigned;
  char *default_func_name;
};
#define TC_DB__CTC_DDLCOLUMN_DEF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddlcolumn_def__descriptor) \
    , (char *)protobuf_c_empty_string, NULL, 0, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0, (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string }


struct  TcDb__CtcDDLForeignKeyElementDef
{
  ProtobufCMessage base;
  char *src_column_name;
  char *ref_column_name;
};
#define TC_DB__CTC_DDLFOREIGN_KEY_ELEMENT_DEF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddlforeign_key_element_def__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  TcDb__CtcDDLForeignKeyDef
{
  ProtobufCMessage base;
  /*
   * fill_dd_foreign_keys_from_create_fields
   */
  char *name;
  char *unique_index_name;
  uint32_t match_opt;
  uint32_t update_opt;
  uint32_t delete_opt;
  char *referenced_table_schema_name;
  char *referenced_table_name;
  size_t n_elements;
  TcDb__CtcDDLForeignKeyElementDef **elements;
};
#define TC_DB__CTC_DDLFOREIGN_KEY_DEF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddlforeign_key_def__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL }


struct  TcDb__CtcDDLTableKeyPart
{
  ProtobufCMessage base;
  /*
   * KEY_PART_INFO
   */
  char *name;
  /*
   * Length of key part in bytes, excluding NULL flag and length bytes 
   */
  uint32_t length;
  int32_t datatype;
  protobuf_c_boolean is_func;
  char *func_text;
  char *func_name;
  uint32_t is_unsigned;
};
#define TC_DB__CTC_DDLTABLE_KEY_PART__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddltable_key_part__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0 }


struct  TcDb__CtcDDLTableKey
{
  ProtobufCMessage base;
  /*
   * Key
   */
  char *user;
  char *table;
  char *name;
  char *space;
  /*
   * ctc_key_type
   */
  int32_t key_type;
  /*
   * ctc_ha_key_alg
   */
  int32_t algorithm;
  protobuf_c_boolean is_func;
  size_t n_columns;
  TcDb__CtcDDLTableKeyPart **columns;
  protobuf_c_boolean is_constraint;
  protobuf_c_boolean is_dsc;
};
#define TC_DB__CTC_DDLTABLE_KEY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddltable_key__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0, 0, 0,NULL, 0, 0 }


struct  TcDb__CtcMsgCommDef
{
  ProtobufCMessage base;
  uint32_t inst_id;
  uint32_t thd_id;
  uint32_t handler_id;
  uint64_t sess_addr;
};
#define TC_DB__CTC_MSG_COMM_DEF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_msg_comm_def__descriptor) \
    , 0, 0, 0, 0 }


struct  TcDb__CtcDDLPartitionTableDef
{
  ProtobufCMessage base;
  char *name;
  size_t n_subpart_table_list;
  TcDb__CtcDDLPartitionTableDef **subpart_table_list;
};
#define TC_DB__CTC_DDLPARTITION_TABLE_DEF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddlpartition_table_def__descriptor) \
    , (char *)protobuf_c_empty_string, 0,NULL }


struct  TcDb__CtcDDLPartitionDef
{
  ProtobufCMessage base;
  uint32_t part_type;
  uint32_t subpart_type;
  size_t n_part_table_list;
  TcDb__CtcDDLPartitionTableDef **part_table_list;
};
#define TC_DB__CTC_DDLPARTITION_DEF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddlpartition_def__descriptor) \
    , 0, 0, 0,NULL }


struct  TcDb__CtcDDLCreateTableDef
{
  ProtobufCMessage base;
  char *schema;
  char *name;
  char *space;
  size_t n_columns;
  TcDb__CtcDDLColumnDef **columns;
  size_t n_fk_list;
  TcDb__CtcDDLForeignKeyDef **fk_list;
  size_t n_key_list;
  TcDb__CtcDDLTableKey **key_list;
  /*
   *init auto incremnet value
   */
  uint64_t auto_increment_value;
  /*
   * if not exists
   */
  uint32_t options;
  char *db_name;
  char *sql_str;
  char *alter_table_name;
  char *alter_db_name;
  protobuf_c_boolean is_create_as_select;
  TcDb__CtcDDLPartitionDef *partition_def;
};
#define TC_DB__CTC_DDLCREATE_TABLE_DEF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddlcreate_table_def__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL, 0,NULL, 0,NULL, 0, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, NULL }


struct  TcDb__CtcDDLAlterTablePorp
{
  ProtobufCMessage base;
  /*
   * knl_alt_table_prop_t
   */
  char *new_name;
  uint32_t pctfree;
  uint32_t appendonly;
  uint32_t enable_row_move;
  uint32_t shrink_opt;
  int64_t serial_start;
};
#define TC_DB__CTC_DDLALTER_TABLE_PORP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddlalter_table_porp__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0, 0, 0, 0 }


struct  TcDb__CtcDDLAlterTableDrop
{
  ProtobufCMessage base;
  char *name;
  /*
   * ctc_alter_table_drop_type
   */
  int32_t drop_type;
  /*
   * ctc_key_type
   */
  int32_t key_type;
};
#define TC_DB__CTC_DDLALTER_TABLE_DROP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddlalter_table_drop__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0 }


struct  TcDb__CtcDDLAlterTableDropKey
{
  ProtobufCMessage base;
  char *name;
  /*
   * ctc_alter_table_drop_type
   */
  int32_t drop_type;
  /*
   * ctc_key_type
   */
  int32_t key_type;
};
#define TC_DB__CTC_DDLALTER_TABLE_DROP_KEY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddlalter_table_drop_key__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0 }


struct  TcDb__CtcDDLAlterTableAlterColumn
{
  ProtobufCMessage base;
  char *name;
  char *new_name;
  /*
   * SET_DEFAULT, DROP_DEFAULT, RENAME_COLUMN
   */
  uint32_t type;
  protobuf_c_boolean has_no_default;
  protobuf_c_boolean has_default;
  protobuf_c_boolean is_default_null;
  /*
   *    string default_data = 8;
   */
  char *default_text;
};
#define TC_DB__CTC_DDLALTER_TABLE_ALTER_COLUMN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddlalter_table_alter_column__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, 0, 0, 0, (char *)protobuf_c_empty_string }


struct  TcDb__CtcDDLAlterTableDef
{
  ProtobufCMessage base;
  /*
   * altable_action_t
   */
  uint32_t action;
  uint32_t options;
  char *user;
  char *name;
  /*
   **
   *Columns, keys and constraints to be dropped.
   */
  size_t n_drop_list;
  TcDb__CtcDDLAlterTableDrop **drop_list;
  /*
   * Columns for ALTER_COLUMN_CHANGE_DEFAULT.
   */
  size_t n_alter_list;
  TcDb__CtcDDLAlterTableAlterColumn **alter_list;
  /*
   * List of columns, used by both CREATE and ALTER TABLE.
   */
  size_t n_create_list;
  TcDb__CtcDDLColumnDef **create_list;
  TcDb__CtcDDLAlterTablePorp *table_def;
  size_t n_add_key_list;
  TcDb__CtcDDLTableKey **add_key_list;
  size_t n_drop_key_list;
  TcDb__CtcDDLAlterTableDropKey **drop_key_list;
  size_t n_add_foreign_key_list;
  TcDb__CtcDDLForeignKeyDef **add_foreign_key_list;
  uint64_t new_auto_increment_value;
  char *db_name;
  char *sql_str;
  size_t n_alter_index_list;
  TcDb__CtcDDLAlterIndexDef **alter_index_list;
  size_t n_drop_partition_names;
  char **drop_partition_names;
  size_t n_add_part_list;
  TcDb__CtcDDLPartitionTableDef **add_part_list;
  uint32_t hash_coalesce_count;
  int64_t systimestamp;
  int32_t tz_offset_utc;
};
#define TC_DB__CTC_DDLALTER_TABLE_DEF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddlalter_table_def__descriptor) \
    , 0, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL, 0,NULL, 0,NULL, NULL, 0,NULL, 0,NULL, 0,NULL, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL, 0,NULL, 0,NULL, 0, 0, 0 }


struct  TcDb__CtcDDLTruncateTableDef
{
  ProtobufCMessage base;
  char *schema;
  char *name;
  char *db_name;
  char *sql_str;
  uint32_t no_check_fk;
};
#define TC_DB__CTC_DDLTRUNCATE_TABLE_DEF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddltruncate_table_def__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0 }


struct  TcDb__CtcDDLTruncateTablePartitionDef
{
  ProtobufCMessage base;
  char *user;
  char *db_name;
  char *table_name;
  size_t n_partition_name;
  char **partition_name;
  size_t n_partition_id;
  uint32_t *partition_id;
  char *sql_str;
  protobuf_c_boolean is_subpart;
  size_t n_subpartition_name;
  char **subpartition_name;
  size_t n_subpartition_id;
  uint32_t *subpartition_id;
};
#define TC_DB__CTC_DDLTRUNCATE_TABLE_PARTITION_DEF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddltruncate_table_partition_def__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL, 0,NULL, (char *)protobuf_c_empty_string, 0, 0,NULL, 0,NULL }


struct  TcDb__CtcDDLRenameTableDef
{
  ProtobufCMessage base;
  /*
   * altable_action_t
   */
  uint32_t action;
  uint32_t options;
  char *user;
  char *new_user;
  char *new_table_name;
  char *new_db_name;
  char *old_table_name;
  char *old_db_name;
  char *current_db_name;
  char *sql_str;
  size_t n_old_constraints_name;
  char **old_constraints_name;
  size_t n_new_constraints_name;
  char **new_constraints_name;
};
#define TC_DB__CTC_DDLRENAME_TABLE_DEF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddlrename_table_def__descriptor) \
    , 0, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL, 0,NULL }


struct  TcDb__CtcDDLDropTableDef
{
  ProtobufCMessage base;
  uint32_t options;
  char *user;
  char *name;
  char *dbname_und;
  char *db_name;
  char *sql_str;
};
#define TC_DB__CTC_DDLDROP_TABLE_DEF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddldrop_table_def__descriptor) \
    , 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  TcDb__CtcDDLAlterIndexDef
{
  ProtobufCMessage base;
  char *user;
  char *name;
  /*
   * def type
   */
  uint32_t type;
  char *table;
  char *new_name;
  /*
   * ctc_key_type
   */
  int32_t key_type;
};
#define TC_DB__CTC_DDLALTER_INDEX_DEF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddlalter_index_def__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0 }


struct  TcDb__CtcDDLAutoExtendDef
{
  ProtobufCMessage base;
  protobuf_c_boolean enabled;
  uint64_t nextsize;
  int64_t maxsize;
};
#define TC_DB__CTC_DDLAUTO_EXTEND_DEF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddlauto_extend_def__descriptor) \
    , 0, 0, 0 }


struct  TcDb__CtcDDLDataFileDef
{
  ProtobufCMessage base;
  char *name;
  /*
   *device size
   */
  int64_t size;
  int32_t block_size;
  /*
   * the data of the autoextend property of the device
   */
  TcDb__CtcDDLAutoExtendDef *autoextend;
  uint32_t node_id;
};
#define TC_DB__CTC_DDLDATA_FILE_DEF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddldata_file_def__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0, NULL, 0 }


struct  TcDb__CtcDDLSpaceDef
{
  ProtobufCMessage base;
  /*
   * name of the space
   */
  char *name;
  /*
   * type of the space
   */
  uint32_t type;
  protobuf_c_boolean in_memory;
  protobuf_c_boolean autooffline;
  uint32_t extent_size;
  size_t n_datafiles_list;
  TcDb__CtcDDLDataFileDef **datafiles_list;
  uint32_t flags;
  char *db_name;
  char *sql_str;
};
#define TC_DB__CTC_DDLSPACE_DEF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddlspace_def__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0, 0, 0, 0,NULL, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  TcDb__CtcDDLDropSpaceDef
{
  ProtobufCMessage base;
  char *obj_name;
  uint32_t option;
  char *db_name;
  char *sql_str;
};
#define TC_DB__CTC_DDLDROP_SPACE_DEF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddldrop_space_def__descriptor) \
    , (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  TcDb__CtcDDLAlterSpaceDef
{
  ProtobufCMessage base;
  uint32_t action;
  /*
   * name of the space
   */
  char *name;
  /*
   * name of the new space
   */
  char *new_name;
  uint64_t auto_extend_size;
  char *db_name;
  char *sql_str;
};
#define TC_DB__CTC_DDLALTER_SPACE_DEF__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&tc_db__ctc_ddlalter_space_def__descriptor) \
    , 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/* TcDb__CtcDDLColumnDataTypeDef methods */
void   tc_db__ctc_ddlcolumn_data_type_def__init
                     (TcDb__CtcDDLColumnDataTypeDef         *message);
size_t tc_db__ctc_ddlcolumn_data_type_def__get_packed_size
                     (const TcDb__CtcDDLColumnDataTypeDef   *message);
size_t tc_db__ctc_ddlcolumn_data_type_def__pack
                     (const TcDb__CtcDDLColumnDataTypeDef   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddlcolumn_data_type_def__pack_to_buffer
                     (const TcDb__CtcDDLColumnDataTypeDef   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLColumnDataTypeDef *
       tc_db__ctc_ddlcolumn_data_type_def__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddlcolumn_data_type_def__free_unpacked
                     (TcDb__CtcDDLColumnDataTypeDef *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLColumnDef methods */
void   tc_db__ctc_ddlcolumn_def__init
                     (TcDb__CtcDDLColumnDef         *message);
size_t tc_db__ctc_ddlcolumn_def__get_packed_size
                     (const TcDb__CtcDDLColumnDef   *message);
size_t tc_db__ctc_ddlcolumn_def__pack
                     (const TcDb__CtcDDLColumnDef   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddlcolumn_def__pack_to_buffer
                     (const TcDb__CtcDDLColumnDef   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLColumnDef *
       tc_db__ctc_ddlcolumn_def__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddlcolumn_def__free_unpacked
                     (TcDb__CtcDDLColumnDef *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLForeignKeyElementDef methods */
void   tc_db__ctc_ddlforeign_key_element_def__init
                     (TcDb__CtcDDLForeignKeyElementDef         *message);
size_t tc_db__ctc_ddlforeign_key_element_def__get_packed_size
                     (const TcDb__CtcDDLForeignKeyElementDef   *message);
size_t tc_db__ctc_ddlforeign_key_element_def__pack
                     (const TcDb__CtcDDLForeignKeyElementDef   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddlforeign_key_element_def__pack_to_buffer
                     (const TcDb__CtcDDLForeignKeyElementDef   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLForeignKeyElementDef *
       tc_db__ctc_ddlforeign_key_element_def__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddlforeign_key_element_def__free_unpacked
                     (TcDb__CtcDDLForeignKeyElementDef *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLForeignKeyDef methods */
void   tc_db__ctc_ddlforeign_key_def__init
                     (TcDb__CtcDDLForeignKeyDef         *message);
size_t tc_db__ctc_ddlforeign_key_def__get_packed_size
                     (const TcDb__CtcDDLForeignKeyDef   *message);
size_t tc_db__ctc_ddlforeign_key_def__pack
                     (const TcDb__CtcDDLForeignKeyDef   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddlforeign_key_def__pack_to_buffer
                     (const TcDb__CtcDDLForeignKeyDef   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLForeignKeyDef *
       tc_db__ctc_ddlforeign_key_def__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddlforeign_key_def__free_unpacked
                     (TcDb__CtcDDLForeignKeyDef *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLTableKeyPart methods */
void   tc_db__ctc_ddltable_key_part__init
                     (TcDb__CtcDDLTableKeyPart         *message);
size_t tc_db__ctc_ddltable_key_part__get_packed_size
                     (const TcDb__CtcDDLTableKeyPart   *message);
size_t tc_db__ctc_ddltable_key_part__pack
                     (const TcDb__CtcDDLTableKeyPart   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddltable_key_part__pack_to_buffer
                     (const TcDb__CtcDDLTableKeyPart   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLTableKeyPart *
       tc_db__ctc_ddltable_key_part__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddltable_key_part__free_unpacked
                     (TcDb__CtcDDLTableKeyPart *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLTableKey methods */
void   tc_db__ctc_ddltable_key__init
                     (TcDb__CtcDDLTableKey         *message);
size_t tc_db__ctc_ddltable_key__get_packed_size
                     (const TcDb__CtcDDLTableKey   *message);
size_t tc_db__ctc_ddltable_key__pack
                     (const TcDb__CtcDDLTableKey   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddltable_key__pack_to_buffer
                     (const TcDb__CtcDDLTableKey   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLTableKey *
       tc_db__ctc_ddltable_key__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddltable_key__free_unpacked
                     (TcDb__CtcDDLTableKey *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcMsgCommDef methods */
void   tc_db__ctc_msg_comm_def__init
                     (TcDb__CtcMsgCommDef         *message);
size_t tc_db__ctc_msg_comm_def__get_packed_size
                     (const TcDb__CtcMsgCommDef   *message);
size_t tc_db__ctc_msg_comm_def__pack
                     (const TcDb__CtcMsgCommDef   *message,
                      uint8_t             *out);
size_t tc_db__ctc_msg_comm_def__pack_to_buffer
                     (const TcDb__CtcMsgCommDef   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcMsgCommDef *
       tc_db__ctc_msg_comm_def__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_msg_comm_def__free_unpacked
                     (TcDb__CtcMsgCommDef *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLPartitionTableDef methods */
void   tc_db__ctc_ddlpartition_table_def__init
                     (TcDb__CtcDDLPartitionTableDef         *message);
size_t tc_db__ctc_ddlpartition_table_def__get_packed_size
                     (const TcDb__CtcDDLPartitionTableDef   *message);
size_t tc_db__ctc_ddlpartition_table_def__pack
                     (const TcDb__CtcDDLPartitionTableDef   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddlpartition_table_def__pack_to_buffer
                     (const TcDb__CtcDDLPartitionTableDef   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLPartitionTableDef *
       tc_db__ctc_ddlpartition_table_def__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddlpartition_table_def__free_unpacked
                     (TcDb__CtcDDLPartitionTableDef *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLPartitionDef methods */
void   tc_db__ctc_ddlpartition_def__init
                     (TcDb__CtcDDLPartitionDef         *message);
size_t tc_db__ctc_ddlpartition_def__get_packed_size
                     (const TcDb__CtcDDLPartitionDef   *message);
size_t tc_db__ctc_ddlpartition_def__pack
                     (const TcDb__CtcDDLPartitionDef   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddlpartition_def__pack_to_buffer
                     (const TcDb__CtcDDLPartitionDef   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLPartitionDef *
       tc_db__ctc_ddlpartition_def__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddlpartition_def__free_unpacked
                     (TcDb__CtcDDLPartitionDef *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLCreateTableDef methods */
void   tc_db__ctc_ddlcreate_table_def__init
                     (TcDb__CtcDDLCreateTableDef         *message);
size_t tc_db__ctc_ddlcreate_table_def__get_packed_size
                     (const TcDb__CtcDDLCreateTableDef   *message);
size_t tc_db__ctc_ddlcreate_table_def__pack
                     (const TcDb__CtcDDLCreateTableDef   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddlcreate_table_def__pack_to_buffer
                     (const TcDb__CtcDDLCreateTableDef   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLCreateTableDef *
       tc_db__ctc_ddlcreate_table_def__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddlcreate_table_def__free_unpacked
                     (TcDb__CtcDDLCreateTableDef *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLAlterTablePorp methods */
void   tc_db__ctc_ddlalter_table_porp__init
                     (TcDb__CtcDDLAlterTablePorp         *message);
size_t tc_db__ctc_ddlalter_table_porp__get_packed_size
                     (const TcDb__CtcDDLAlterTablePorp   *message);
size_t tc_db__ctc_ddlalter_table_porp__pack
                     (const TcDb__CtcDDLAlterTablePorp   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddlalter_table_porp__pack_to_buffer
                     (const TcDb__CtcDDLAlterTablePorp   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLAlterTablePorp *
       tc_db__ctc_ddlalter_table_porp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddlalter_table_porp__free_unpacked
                     (TcDb__CtcDDLAlterTablePorp *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLAlterTableDrop methods */
void   tc_db__ctc_ddlalter_table_drop__init
                     (TcDb__CtcDDLAlterTableDrop         *message);
size_t tc_db__ctc_ddlalter_table_drop__get_packed_size
                     (const TcDb__CtcDDLAlterTableDrop   *message);
size_t tc_db__ctc_ddlalter_table_drop__pack
                     (const TcDb__CtcDDLAlterTableDrop   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddlalter_table_drop__pack_to_buffer
                     (const TcDb__CtcDDLAlterTableDrop   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLAlterTableDrop *
       tc_db__ctc_ddlalter_table_drop__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddlalter_table_drop__free_unpacked
                     (TcDb__CtcDDLAlterTableDrop *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLAlterTableDropKey methods */
void   tc_db__ctc_ddlalter_table_drop_key__init
                     (TcDb__CtcDDLAlterTableDropKey         *message);
size_t tc_db__ctc_ddlalter_table_drop_key__get_packed_size
                     (const TcDb__CtcDDLAlterTableDropKey   *message);
size_t tc_db__ctc_ddlalter_table_drop_key__pack
                     (const TcDb__CtcDDLAlterTableDropKey   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddlalter_table_drop_key__pack_to_buffer
                     (const TcDb__CtcDDLAlterTableDropKey   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLAlterTableDropKey *
       tc_db__ctc_ddlalter_table_drop_key__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddlalter_table_drop_key__free_unpacked
                     (TcDb__CtcDDLAlterTableDropKey *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLAlterTableAlterColumn methods */
void   tc_db__ctc_ddlalter_table_alter_column__init
                     (TcDb__CtcDDLAlterTableAlterColumn         *message);
size_t tc_db__ctc_ddlalter_table_alter_column__get_packed_size
                     (const TcDb__CtcDDLAlterTableAlterColumn   *message);
size_t tc_db__ctc_ddlalter_table_alter_column__pack
                     (const TcDb__CtcDDLAlterTableAlterColumn   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddlalter_table_alter_column__pack_to_buffer
                     (const TcDb__CtcDDLAlterTableAlterColumn   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLAlterTableAlterColumn *
       tc_db__ctc_ddlalter_table_alter_column__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddlalter_table_alter_column__free_unpacked
                     (TcDb__CtcDDLAlterTableAlterColumn *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLAlterTableDef methods */
void   tc_db__ctc_ddlalter_table_def__init
                     (TcDb__CtcDDLAlterTableDef         *message);
size_t tc_db__ctc_ddlalter_table_def__get_packed_size
                     (const TcDb__CtcDDLAlterTableDef   *message);
size_t tc_db__ctc_ddlalter_table_def__pack
                     (const TcDb__CtcDDLAlterTableDef   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddlalter_table_def__pack_to_buffer
                     (const TcDb__CtcDDLAlterTableDef   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLAlterTableDef *
       tc_db__ctc_ddlalter_table_def__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddlalter_table_def__free_unpacked
                     (TcDb__CtcDDLAlterTableDef *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLTruncateTableDef methods */
void   tc_db__ctc_ddltruncate_table_def__init
                     (TcDb__CtcDDLTruncateTableDef         *message);
size_t tc_db__ctc_ddltruncate_table_def__get_packed_size
                     (const TcDb__CtcDDLTruncateTableDef   *message);
size_t tc_db__ctc_ddltruncate_table_def__pack
                     (const TcDb__CtcDDLTruncateTableDef   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddltruncate_table_def__pack_to_buffer
                     (const TcDb__CtcDDLTruncateTableDef   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLTruncateTableDef *
       tc_db__ctc_ddltruncate_table_def__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddltruncate_table_def__free_unpacked
                     (TcDb__CtcDDLTruncateTableDef *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLTruncateTablePartitionDef methods */
void   tc_db__ctc_ddltruncate_table_partition_def__init
                     (TcDb__CtcDDLTruncateTablePartitionDef         *message);
size_t tc_db__ctc_ddltruncate_table_partition_def__get_packed_size
                     (const TcDb__CtcDDLTruncateTablePartitionDef   *message);
size_t tc_db__ctc_ddltruncate_table_partition_def__pack
                     (const TcDb__CtcDDLTruncateTablePartitionDef   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddltruncate_table_partition_def__pack_to_buffer
                     (const TcDb__CtcDDLTruncateTablePartitionDef   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLTruncateTablePartitionDef *
       tc_db__ctc_ddltruncate_table_partition_def__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddltruncate_table_partition_def__free_unpacked
                     (TcDb__CtcDDLTruncateTablePartitionDef *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLRenameTableDef methods */
void   tc_db__ctc_ddlrename_table_def__init
                     (TcDb__CtcDDLRenameTableDef         *message);
size_t tc_db__ctc_ddlrename_table_def__get_packed_size
                     (const TcDb__CtcDDLRenameTableDef   *message);
size_t tc_db__ctc_ddlrename_table_def__pack
                     (const TcDb__CtcDDLRenameTableDef   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddlrename_table_def__pack_to_buffer
                     (const TcDb__CtcDDLRenameTableDef   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLRenameTableDef *
       tc_db__ctc_ddlrename_table_def__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddlrename_table_def__free_unpacked
                     (TcDb__CtcDDLRenameTableDef *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLDropTableDef methods */
void   tc_db__ctc_ddldrop_table_def__init
                     (TcDb__CtcDDLDropTableDef         *message);
size_t tc_db__ctc_ddldrop_table_def__get_packed_size
                     (const TcDb__CtcDDLDropTableDef   *message);
size_t tc_db__ctc_ddldrop_table_def__pack
                     (const TcDb__CtcDDLDropTableDef   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddldrop_table_def__pack_to_buffer
                     (const TcDb__CtcDDLDropTableDef   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLDropTableDef *
       tc_db__ctc_ddldrop_table_def__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddldrop_table_def__free_unpacked
                     (TcDb__CtcDDLDropTableDef *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLAlterIndexDef methods */
void   tc_db__ctc_ddlalter_index_def__init
                     (TcDb__CtcDDLAlterIndexDef         *message);
size_t tc_db__ctc_ddlalter_index_def__get_packed_size
                     (const TcDb__CtcDDLAlterIndexDef   *message);
size_t tc_db__ctc_ddlalter_index_def__pack
                     (const TcDb__CtcDDLAlterIndexDef   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddlalter_index_def__pack_to_buffer
                     (const TcDb__CtcDDLAlterIndexDef   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLAlterIndexDef *
       tc_db__ctc_ddlalter_index_def__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddlalter_index_def__free_unpacked
                     (TcDb__CtcDDLAlterIndexDef *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLAutoExtendDef methods */
void   tc_db__ctc_ddlauto_extend_def__init
                     (TcDb__CtcDDLAutoExtendDef         *message);
size_t tc_db__ctc_ddlauto_extend_def__get_packed_size
                     (const TcDb__CtcDDLAutoExtendDef   *message);
size_t tc_db__ctc_ddlauto_extend_def__pack
                     (const TcDb__CtcDDLAutoExtendDef   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddlauto_extend_def__pack_to_buffer
                     (const TcDb__CtcDDLAutoExtendDef   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLAutoExtendDef *
       tc_db__ctc_ddlauto_extend_def__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddlauto_extend_def__free_unpacked
                     (TcDb__CtcDDLAutoExtendDef *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLDataFileDef methods */
void   tc_db__ctc_ddldata_file_def__init
                     (TcDb__CtcDDLDataFileDef         *message);
size_t tc_db__ctc_ddldata_file_def__get_packed_size
                     (const TcDb__CtcDDLDataFileDef   *message);
size_t tc_db__ctc_ddldata_file_def__pack
                     (const TcDb__CtcDDLDataFileDef   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddldata_file_def__pack_to_buffer
                     (const TcDb__CtcDDLDataFileDef   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLDataFileDef *
       tc_db__ctc_ddldata_file_def__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddldata_file_def__free_unpacked
                     (TcDb__CtcDDLDataFileDef *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLSpaceDef methods */
void   tc_db__ctc_ddlspace_def__init
                     (TcDb__CtcDDLSpaceDef         *message);
size_t tc_db__ctc_ddlspace_def__get_packed_size
                     (const TcDb__CtcDDLSpaceDef   *message);
size_t tc_db__ctc_ddlspace_def__pack
                     (const TcDb__CtcDDLSpaceDef   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddlspace_def__pack_to_buffer
                     (const TcDb__CtcDDLSpaceDef   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLSpaceDef *
       tc_db__ctc_ddlspace_def__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddlspace_def__free_unpacked
                     (TcDb__CtcDDLSpaceDef *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLDropSpaceDef methods */
void   tc_db__ctc_ddldrop_space_def__init
                     (TcDb__CtcDDLDropSpaceDef         *message);
size_t tc_db__ctc_ddldrop_space_def__get_packed_size
                     (const TcDb__CtcDDLDropSpaceDef   *message);
size_t tc_db__ctc_ddldrop_space_def__pack
                     (const TcDb__CtcDDLDropSpaceDef   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddldrop_space_def__pack_to_buffer
                     (const TcDb__CtcDDLDropSpaceDef   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLDropSpaceDef *
       tc_db__ctc_ddldrop_space_def__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddldrop_space_def__free_unpacked
                     (TcDb__CtcDDLDropSpaceDef *message,
                      ProtobufCAllocator *allocator);
/* TcDb__CtcDDLAlterSpaceDef methods */
void   tc_db__ctc_ddlalter_space_def__init
                     (TcDb__CtcDDLAlterSpaceDef         *message);
size_t tc_db__ctc_ddlalter_space_def__get_packed_size
                     (const TcDb__CtcDDLAlterSpaceDef   *message);
size_t tc_db__ctc_ddlalter_space_def__pack
                     (const TcDb__CtcDDLAlterSpaceDef   *message,
                      uint8_t             *out);
size_t tc_db__ctc_ddlalter_space_def__pack_to_buffer
                     (const TcDb__CtcDDLAlterSpaceDef   *message,
                      ProtobufCBuffer     *buffer);
TcDb__CtcDDLAlterSpaceDef *
       tc_db__ctc_ddlalter_space_def__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   tc_db__ctc_ddlalter_space_def__free_unpacked
                     (TcDb__CtcDDLAlterSpaceDef *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*TcDb__CtcDDLColumnDataTypeDef_Closure)
                 (const TcDb__CtcDDLColumnDataTypeDef *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLColumnDef_Closure)
                 (const TcDb__CtcDDLColumnDef *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLForeignKeyElementDef_Closure)
                 (const TcDb__CtcDDLForeignKeyElementDef *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLForeignKeyDef_Closure)
                 (const TcDb__CtcDDLForeignKeyDef *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLTableKeyPart_Closure)
                 (const TcDb__CtcDDLTableKeyPart *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLTableKey_Closure)
                 (const TcDb__CtcDDLTableKey *message,
                  void *closure_data);
typedef void (*TcDb__CtcMsgCommDef_Closure)
                 (const TcDb__CtcMsgCommDef *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLPartitionTableDef_Closure)
                 (const TcDb__CtcDDLPartitionTableDef *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLPartitionDef_Closure)
                 (const TcDb__CtcDDLPartitionDef *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLCreateTableDef_Closure)
                 (const TcDb__CtcDDLCreateTableDef *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLAlterTablePorp_Closure)
                 (const TcDb__CtcDDLAlterTablePorp *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLAlterTableDrop_Closure)
                 (const TcDb__CtcDDLAlterTableDrop *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLAlterTableDropKey_Closure)
                 (const TcDb__CtcDDLAlterTableDropKey *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLAlterTableAlterColumn_Closure)
                 (const TcDb__CtcDDLAlterTableAlterColumn *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLAlterTableDef_Closure)
                 (const TcDb__CtcDDLAlterTableDef *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLTruncateTableDef_Closure)
                 (const TcDb__CtcDDLTruncateTableDef *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLTruncateTablePartitionDef_Closure)
                 (const TcDb__CtcDDLTruncateTablePartitionDef *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLRenameTableDef_Closure)
                 (const TcDb__CtcDDLRenameTableDef *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLDropTableDef_Closure)
                 (const TcDb__CtcDDLDropTableDef *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLAlterIndexDef_Closure)
                 (const TcDb__CtcDDLAlterIndexDef *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLAutoExtendDef_Closure)
                 (const TcDb__CtcDDLAutoExtendDef *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLDataFileDef_Closure)
                 (const TcDb__CtcDDLDataFileDef *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLSpaceDef_Closure)
                 (const TcDb__CtcDDLSpaceDef *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLDropSpaceDef_Closure)
                 (const TcDb__CtcDDLDropSpaceDef *message,
                  void *closure_data);
typedef void (*TcDb__CtcDDLAlterSpaceDef_Closure)
                 (const TcDb__CtcDDLAlterSpaceDef *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor tc_db__ctc_ddlcolumn_data_type_def__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddlcolumn_def__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddlforeign_key_element_def__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddlforeign_key_def__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddltable_key_part__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddltable_key__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_msg_comm_def__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddlpartition_table_def__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddlpartition_def__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddlcreate_table_def__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddlalter_table_porp__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddlalter_table_drop__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddlalter_table_drop_key__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddlalter_table_alter_column__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddlalter_table_def__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddltruncate_table_def__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddltruncate_table_partition_def__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddlrename_table_def__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddldrop_table_def__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddlalter_index_def__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddlauto_extend_def__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddldata_file_def__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddlspace_def__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddldrop_space_def__descriptor;
extern const ProtobufCMessageDescriptor tc_db__ctc_ddlalter_space_def__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_tc_5fdb_2eproto__INCLUDED */
