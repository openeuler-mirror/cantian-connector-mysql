--disable_warnings
drop database if exists db1;
--enable_warnings


# 创建函数索引正常场景
create database db1;
use db1;
create table t1 (c1 int, c2 int, c3 varchar(10), c4 varchar(10));
insert into t1 values (1, 1, 'aaa', 'aaa'), (2, 2, 'aaA', 'aBB'), (3, 3, 'AAA', 'CDSV'), (4, 4, 'aaBa', 'Aaa');
select * from t1;
select * from t1 where upper(c3) = 'AAA';
explain select * from t1 where upper(c3) = 'AAA';
create index func_index_1 on t1 ((upper(c3)));
select * from t1 where upper(c3) = 'AAA';
explain select * from t1 where upper(c3) = 'AAA';
create index func_index_2 on t1 ((substr(c4, 1, 1)));
select * from t1 where substr(c4, 1, 1) = 'a';
explain select * from t1 where substr(c4, 1, 1) = 'a';
analyze table t1;
explain select * from t1 where substr(c4, 1, 1) = 'a';

# 创建嵌套函数索引场景
create index func_index_3 on t1 ((substr(upper(c4), 1, 1)));
select * from t1 where substr(upper(c4), 1, 1) = 'a';
explain select * from t1 where substr(upper(c4), 1, 1) = 'a';
analyze table t1;
explain select * from t1 where substr(upper(c4), 1, 1) = 'a';
create index func_index_4 on t1 ((upper(substr(c4, 1, 1))));
select * from t1 where upper(substr(c4, 1, 1)) = 'a';
explain select * from t1 where upper(substr(c4, 1, 1)) = 'a';
analyze table t1;
explain select * from t1 where upper(substr(c4, 1, 1)) = 'a';

# 删除函数索引
alter table t1 drop index func_index_1;
drop index func_index_2 on t1;
drop index func_index_3 on t1;
drop index func_index_4 on t1;

# 创建函数索引异常场景
create table t2 (c1 int, c2 int, c3 varchar(10));
insert into t2 values (1, 1, 'aaa'), (2, 2, 'aaA'), (3, 3, 'AAA'), (4, 4, 'aaBa');
select * from t2;
create index func_index_abs on t2 ((abs(c1)));
--error ER_DISALLOWED_OPERATION
create index func_index_2 on t2 ((c1 + c2));


# 创建表时创建函数索引场景
create table t3 (c1 int, c2 int, c3 varchar(10), index func_idx_1 ((upper(c3))));
insert into t3 values (1, 1, 'aaa'), (2, 2, 'aaA'), (3, 3, 'AAA'), (4, 4, 'aaBa');
select * from t3;
select * from t3 where upper(c3) = 'AAA';
explain select * from t3 where upper(c3) = 'AAA';
create table t4 (c1 int, c2 int, c3 varchar(10), index func_idx_1 ((substr(c3, 1, 1))));
insert into t4 values (1, 1, 'aaa'), (2, 2, 'baa'), (3, 3, 'Bbb');
select * from t4 where substr(c3, 1, 1) = 'b';
explain select * from t4 where substr(c3, 1, 1) = 'b';

create table t5 (c1 int, c2 int, c3 varchar(10), index func_idx_1 ((abs(c1))));
drop table t5;
# 创建表时创建函数索引异常场景
--error ER_DISALLOWED_OPERATION
create table t5 (c1 int, c2 int, c3 varchar(10), index func_idx_1 ((c1 + c2)));

# 创建包含条件表达式函数索引异常场景
create table t6 (c1 int, c2 int);
--error ER_DISALLOWED_OPERATION
create index index_func_idx_1 on t6 ((if(c1 = 1, 1, 3)));

drop table t6;

# 创建混合中英文字符索引场景
create table t7 (c1 varbinary(20));
insert into t7 values ('ab一二'), ('ab一er');
--error ER_DUP_ENTRY
create unique index func_idx1 on t7 ((substr(c1, 2, 2)));
--error ER_DUP_ENTRY
create unique index func_idx2 on t7 ((substr(c1, 2, 4)));
--error ER_DUP_ENTRY
alter table t7 add unique key func_idx3(c1(4));
--error ER_DUP_ENTRY
create unique index func_idx4 on t7 ((substr(upper(c1), 2, 2)));
drop table t7;

create table t8 (c1 blob);
insert into t8 values ('ab一二'), ('ab一er');
--error ER_DUP_ENTRY
create unique index func_idx1 on t8 ((substr(c1, 2, 2)));
--error ER_DUP_ENTRY
create unique index func_idx2 on t8 ((substr(c1, 2, 4)));
--error ER_DUP_ENTRY
alter table t8 add unique key func_idx3(c1(4));
drop table t8;

create table t9 (c1 varchar(20));
insert into t9 values ('ab一二'), ('ab一er');
--error ER_DUP_ENTRY
create unique index func_idx1 on t9 ((substr(c1, 2, 2)));
create unique index func_idx2 on t9 ((substr(c1, 2, 4)));
alter table t9 add unique key func_idx3(c1(4));
--error ER_DUP_ENTRY
create unique index func_idx4 on t9 ((substr(upper(c1), 2, 2)));
drop table t9;

create table t10 (c1 text);
insert into t10 values ('ab一二'), ('ab一er');
--error ER_DUP_ENTRY
create unique index func_idx1 on t10 ((substr(c1, 2, 2)));
create unique index func_idx2 on t10 ((substr(c1, 2, 4)));
alter table t10 add unique key func_idx3(c1(4));
drop table t10;

create table t11 (c1 varchar(20)) default charset = binary;
insert into t11 values ('ab一二'), ('ab一er');
--error ER_DUP_ENTRY
create unique index func_idx1 on t11 ((substr(c1, 2, 2)));
--error ER_DUP_ENTRY
create unique index func_idx2 on t11 ((substr(c1, 2, 4)));
--error ER_DUP_ENTRY
alter table t11 add unique key func_idx3(c1(4));
drop table t11;

create table t12 (c1 text) default charset = binary;
insert into t12 values ('ab一二'), ('ab一er');
--error ER_DUP_ENTRY
create unique index func_idx1 on t12 ((substr(c1, 2, 2)));
--error ER_DUP_ENTRY
create unique index func_idx2 on t12 ((substr(c1, 2, 4)));
--error ER_DUP_ENTRY
alter table t12 add unique key func_idx3(c1(4));
drop table t12;

drop database db1;
