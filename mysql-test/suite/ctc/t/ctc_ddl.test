--disable_warnings
drop table if exists DEMO;
--enable_warnings

# create a table.
create table DEMO (ID integer not null, NAME varchar(19), AGE integer, GRADE real);

# insert some data to table.
insert into DEMO values (1, 'LIOR', 35, 6.9);  
insert into DEMO values (4, 'MIKE', 55, 99.92);  
insert into DEMO values (8, 'ROMAN', 40, 94.1);  
insert into DEMO values (16, 'DAN', 60, 1234567890);  
insert into DEMO values (32, 'ZVI', 35, 777.666);  
insert into DEMO values (1, 'Eitan', NULL, 4.9);
insert into DEMO values (888888, 'zhangdi', NULL, 10000.8);
insert into DEMO values (1131, 'Hisses', 1, NULL);

#select update insert delete.
SELECT * FROM DEMO;

#此处会失败，不支持在含有重复值的列上设置主键
--error ER_DUP_ENTRY
ALTER TABLE DEMO ADD PRIMARY KEY (ID);

#把重复的记录删了能够成功
DELETE FROM DEMO WHERE GRADE = 4.9;
ALTER TABLE DEMO ADD PRIMARY KEY (ID);

#创建用户
#CREATE USER zd1 IDENTIFIED BY "Zd1-123456";
#GRANT ALL PRIVILEGES  ON *.*  TO zd1; #cantian里面需要把 ON *.*删除掉，CANTIAN不支持此语法
#CREATE USER zd2 IDENTIFIED BY "Zd1-123456";
#GRANT SELECT,INSERT,UPDATE, DELETE ON demo_db.DEMO TO zd2; #这里只支持db.table语法，cantian不支持db,发到cantian侧需要把db删掉

#Adding a foreign key constraint
create table DEMO_A (ID integer not null, NAME varchar(19) not null, SCORE float, CONSTRAINT id_fk FOREIGN KEY (ID) REFERENCES DEMO(ID));
desc DEMO_A;
show create table DEMO_A;
#Dropping a foreign key constraint
alter table DEMO_A drop CONSTRAINT id_fk;
show create table DEMO_A;
alter table DEMO_A drop index id_fk;
show create table DEMO_A;

#Dropping a primary key
ALTER TABLE DEMO DROP PRIMARY KEY;
show create table DEMO;

#Adding a column
ALTER TABLE DEMO ADD COLUMN CLASS INT;
SELECT * FROM DEMO;

#Renaming a column
ALTER TABLE DEMO RENAME COLUMN CLASS TO NEW_CLASS;
SELECT * FROM DEMO;

#Setting a column default value
ALTER TABLE DEMO MODIFY NEW_CLASS INT DEFAULT 1;
desc DEMO;

#Changing the column data type
ALTER TABLE DEMO MODIFY NEW_CLASS FLOAT;
desc DEMO;

#Dropping a column
ALTER TABLE DEMO DROP COLUMN NEW_CLASS;
SELECT * FROM DEMO;

#Extending VARCHAR column size
ALTER TABLE DEMO MODIFY COLUMN NAME varchar(32);
desc DEMO;

#Making a column NULL
ALTER TABLE DEMO MODIFY ID int NULL;
desc DEMO;

#Making a column NOT NULL
ALTER TABLE DEMO MODIFY ID int NOT NULL;
desc DEMO;

#Renaming a table
ALTER TABLE DEMO RENAME TO DEMO1;
SELECT * FROM DEMO1;

#Renaming a general tablespace
#CTC不支持CREATE TABLESPACE，也就无法rename TABLESPACE，也就无法rename tablespace
#CREATE TABLESPACE TEST_SPACE;
#ERROR 1478 (HY000): Table storage engine 'CTC' does not support the create option 'CREATE TABLESPACE'

drop table DEMO1;
drop table DEMO_A;

# 表名为特殊符号
CREATE TABLE `@#$%`(i int);
SHOW TABLES;
INSERT INTO `@#$%` VALUES(123123);
SELECT * from `@#$%`;
ALTER TABLE `@#$%` ADD test int;
RENAME TABLE `@#$%` to `$$$$`;
INSERT INTO `$$$$` VALUES(233233, 11111);
SELECT * from `$$$$`;
TRUNCATE TABLE `$$$$`;
SELECT * from `$$$$`;
DROP TABLE `$$$$`;
create table ` #`(i int);
insert into ` #` values (1);
select * from ` #`;
drop table ` #`;
CREATE TABLE `@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#`(i int);
DROP TABLE `@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#`;
CREATE TABLE `#test`(i int);
INSERT INTO `#test` VALUES (1123);
SELECT * FROM `#test`;
ALTER TABLE `#test` add col2 int;
DROP TABLE `#test`;
--error ER_TOO_LONG_IDENT
create table `@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#$`(i int);
--error ER_WRONG_TABLE_NAME
create table ``(i int);
--error ER_WRONG_TABLE_NAME
create table `   `(i int);
set debug = '-d, ctc_lock_table_fail_DISALLOW_OPERATION';
set debug = '-d, ctc_lock_table_fail';
create table test1(i int);
set debug = '+d, non_metadata_normalization';
set debug = '+d, ctc_ddl_rewrite_broadcast_fail';
--error ER_DISALLOWED_OPERATION
lock table test1 write;
set debug = '-d, ctc_ddl_rewrite_broadcast_fail';
set debug = '-d, non_metadata_normalization';
drop table test1;