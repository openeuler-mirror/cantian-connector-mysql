#测试生成列和虚拟列
CREATE TABLE triangle (
  sidea DOUBLE,
  sideb DOUBLE,
  sidec DOUBLE AS (SQRT(sidea * sidea + sideb * sideb)) STORED
);
drop table triangle;
CREATE TABLE triangle1 (
  sidea DOUBLE,
  sideb DOUBLE,
  sidec DOUBLE AS (SQRT(sidea * sidea + sideb * sideb))
);
INSERT INTO triangle1(sidea, sideb) VALUES(2,2),(4,4),(8,8);
desc triangle1;
select * from triangle1;
show create table triangle1;
drop table triangle1;

DROP TABLE IF EXISTS t_8114;
CREATE TABLE t_8114 (Column_0 int, Column_1 CHAR(5) GENERATED ALWAYS AS (PI()+5), Column_2 CHAR(5), Column_3 CHAR(5) GENERATED ALWAYS AS (PI()+5), Column_4 int);
insert into t_8114 values(1, default, 'aa', default, 2);
insert into t_8114 values(3, default, 'bb', default, 4);
insert into t_8114 values(5, default, 'cc', default, 6);
insert into t_8114 values(7, default, 'dd', default, 8);
insert into t_8114 values(9, default, 'dd', default, 10);
select * from t_8114;
ALTER TABLE t_8114 DROP COLUMN Column_0;
select * from t_8114;
ALTER TABLE t_8114 DROP COLUMN Column_1;
select * from t_8114;
ALTER TABLE t_8114 ADD COLUMN Column_5 INT;
ALTER TABLE t_8114 ADD COLUMN Column_6 INT;
select * from t_8114;
update t_8114 set Column_5 = 6 where Column_4 = 2;
select * from t_8114;
insert into t_8114 values('ee', default, 12, 14, 16);
insert into t_8114 values('ff', default, 18, 20, 22);
select * from t_8114;
update t_8114 set Column_5 = 8, Column_6 = 9 where Column_4 = 2;
select * from t_8114;
ALTER TABLE t_8114 DROP COLUMN Column_3;
select * from t_8114;
alter table t_8114 add index idx(Column_5);
analyze table t_8114;
explain select * from t_8114 where Column_5 is not NULL;
drop table t_8114;

CREATE TABLE t1 (a6 VARCHAR(32));
INSERT INTO t1 VALUES ('00:00:00.000000');
INSERT INTO t1 VALUES ('00:00:00.000001');
INSERT INTO t1 VALUES ('00:00:00.000002');
INSERT INTO t1 VALUES ('00:00:00.000003');
INSERT INTO t1 VALUES ('00:00:00.000004');
INSERT INTO t1 VALUES ('00:00:00.000005');
INSERT INTO t1 VALUES('00:00:00.000006');
ALTER TABLE t1 ADD a0 VARCHAR(32), ADD a1 VARCHAR(32), ADD a2 VARCHAR(32), ADD a3 VARCHAR(32), ADD a4 VARCHAR(32), ADD a5 VARCHAR(32), ADD t0 TIME(0), ADD t1 TIME(1), ADD t2 TIME(2), ADD t3 TIME(3), ADD t4 TIME(4), ADD t5 TIME(5), ADD t6 TIME(6);
select * from t1;
UPDATE t1 SET a0=LEFT(a6, LENGTH(a6) - 6);
select * from t1;
drop table t1;

CREATE TABLE t1 (a0 VARCHAR(32),a1 VARCHAR(32),a2 VARCHAR(32),a3 VARCHAR(32),a4 VARCHAR(32),a5 VARCHAR(32),a6 VARCHAR(32), t0 TIME(0),t1 TIME(1), t2 TIME(2));
insert into t1 values('00:00:00.000001','00:00:00.000001','00:00:00.000001','00:00:00.000001','00:00:00.000001','00:00:00.000001','00:00:00.000001','00:00:00.000001','00:00:00.000001','00:00:00.000001');
select * from t1;
alter table t1 ADD t3 TIME(3), ADD t4 TIME(4), ADD t5 TIME(5), ADD t6 TIME(6);
select * from t1;
insert into t1 values('00:00:00.000002','00:00:00.000002','00:00:00.000002','00:00:00.000002','00:00:00.000002','00:00:00.000002','00:00:00.000002','00:00:00.000002','00:00:00.000002','00:00:00.000002','00:00:00.000002','00:00:00.000002','00:00:00.000002','00:00:00.000002');
select * from t1;
alter table t1 drop t6;
select * from t1;
alter table t1 drop a2, drop a3;
select * from t1;
insert into t1 values('00:00:00.000003','00:00:00.000003','00:00:00.000003','00:00:00.000003','00:00:00.000003','00:00:00.000003','00:00:00.000003','00:00:00.000003','00:00:00.000003','00:00:00.000003','00:00:00.000003');
alter table t1 add t10 TIME(6), add t11 TIME(6), add t12 TIME(6);
select * from t1;
alter table t1 drop t0, drop t1, drop t2;
select * from t1;
drop table t1;

create table t1(
c1 int UNSIGNED not null,
c2 int,
c3 int,
c4 int,
c5 int,
c6 int,
c7 int,
c8 int,
c9 int,
c10 varchar(20),
c11 varchar(20),
c12 varchar(20),
gcol1 INTEGER GENERATED ALWAYS AS (c4 + c5) VIRTUAL
);
insert into t1 values(1,2,3,4,5,6,7,8,9,'aaa','bbb','ccc',default);
select * from t1;
update t1 set c1 = 11, c2 = 12, c3 = 13, c4 = 14, c5 = 15, c6 = 16, c7 = 17, c8 = 18, c9 = 19, c10 = 'ddd', c11 = 'eee', c12 = 'fff', gcol1 = default where c1 = 1;
select * from t1;
drop table t1;

create table t1(
  pk int NOT NULL AUTO_INCREMENT,
  a1 smallint GENERATED ALWAYS AS (((0 <> `c1`) and ('22:33:44' <> `d1`))) VIRTUAL NOT SECONDARY,
  b1 char(8) DEFAULT NULL,
  c1 longblob NOT NULL NOT SECONDARY,
  d1 time NOT NULL,
  PRIMARY KEY (pk),
  KEY `idx_b1`(b1),
  KEY `functional index` ((radians(`c1`))) USING BTREE
);
insert into t1(b1,c1,d1) values ('a','s','11:11:11');
insert into t1(b1,c1,d1) values ('b','s','11:11:11');
insert into t1(b1,c1,d1) values ('c','s','11:11:11');
insert into t1(b1,c1,d1) values ('d','s','11:11:11');
insert into t1(b1,c1,d1) values ('e','s','11:11:11');
insert into t1(b1,c1,d1) values ('f','s','11:11:11');
insert into t1(b1,c1,d1) values ('g','s','11:11:11');
analyze table t1;
explain select * from t1 where b1 < 'c';
drop table t1;

# create table with virtual generated column (vgc)
CREATE TABLE t1 (
    price DECIMAL(10, 2) NOT NULL,
    quantity INT NOT NULL,
    total_price DECIMAL(10, 2) GENERATED ALWAYS AS (price * quantity) VIRTUAL,
    first_name VARCHAR(50) DEFAULT NULL,
    last_name VARCHAR(50) DEFAULT NULL,
    full_name VARCHAR(110) GENERATED ALWAYS AS (CONCAT(first_name, last_name)) VIRTUAL,
    last_col varchar(50) DEFAULT NULL
);

insert into t1 (price, quantity, first_name, last_name, last_col) values (1.25, 5, 'Zhang', 'San', 'last_column');
insert into t1 (price, quantity, first_name, last_name, last_col) values (10.25, 7, 'Li', 'Si', 'last_column');
insert into t1 (price, quantity, first_name, last_name, last_col) values (0.25, 9, 'Wang', 'Wu', 'last_column');

select * from t1;

# drop vgc using COPY
ALTER TABLE t1 ALGORITHM=COPY, DROP COLUMN total_price;
ALTER TABLE t1 DROP COLUMN full_name;
ALTER TABLE t1 DROP COLUMN last_col;

show create table t1;

# add vgc using COPY and INPLACE
ALTER TABLE t1 ALGORITHM=COPY, 
ADD COLUMN total_price DECIMAL(10, 2) 
GENERATED ALWAYS AS (price * quantity) VIRTUAL;

ALTER TABLE t1 ALGORITHM=INPLACE, 
ADD COLUMN full_name VARCHAR(110) 
GENERATED ALWAYS AS (CONCAT(first_name, last_name)) VIRTUAL;

ALTER TABLE t1 ALGORITHM=COPY, ADD COLUMN last_col_0 varchar(10);
ALTER TABLE t1 ALGORITHM=INPLACE, ADD COLUMN last_col_1 varchar(10);

DROP TABLE t1;

# create table with vgc and vsc
CREATE TABLE t2 (
    price DECIMAL(10, 2) NOT NULL,
    quantity INT NOT NULL,
    total_price DECIMAL(10, 2) GENERATED ALWAYS AS (price * quantity) STORED,
    first_name VARCHAR(50) DEFAULT NULL,
    last_name VARCHAR(50) DEFAULT NULL,
    full_name VARCHAR(110) GENERATED ALWAYS AS (CONCAT(first_name, last_name)) VIRTUAL,
    last_col varchar(50) DEFAULT NULL
);

# create index on vsc (suport)
ALTER TABLE t2 ALGORITHM=COPY, ADD INDEX idx_total (total_price);
ALTER TABLE t2 ALGORITHM=INPLACE, ADD INDEX idx_pqt (price, quantity, total_price);

DROP TABLE t2;

# create table with vgc and func_index
CREATE TABLE t1 (
    c1 INT, 
    c2 INT, 
    c3 VARCHAR(10), 
    c4 VARCHAR(10),
    v_col_1 INT GENERATED ALWAYS AS (c1 + c1) VIRTUAL,
    v_col_2 INT GENERATED ALWAYS AS (c2 + c2) VIRTUAL,
    INDEX idx_c3 ((UPPER(c3))),
    INDEX idx_c4 ((SUBSTR(c4, 1, 1))), 
    v_col_3 INT GENERATED ALWAYS AS (c1 + c2) VIRTUAL,
    c5 VARCHAR(10)
);

alter table t1 add column v_col_4 INT GENERATED ALWAYS AS (c1 * c2) VIRTUAL;
DROP TABLE t1;

CREATE TABLE t1 (
    c1 INT, 
    c2 INT, 
    c3 VARCHAR(10), 
    c4 VARCHAR(10),
    v_col_1 INT GENERATED ALWAYS AS (c1 + c1) VIRTUAL,
    v_col_2 INT GENERATED ALWAYS AS (c2 + c2) VIRTUAL,
    INDEX idx_c3 ((UPPER(c3))),
    INDEX idx_c4 ((SUBSTR(c4, 1, 1))), 
    v_col_3 INT GENERATED ALWAYS AS (c1 + c2) VIRTUAL,
    c5 VARCHAR(10)
);
# inplace default
create index idx_test on t1 ((SUBSTR(c3, 1, 2)));
alter table t1 algorithm=copy, add index idx_text_1 ((SUBSTR(c3, 1, 2)));
DROP TABLE t1;

# NEST of virtual columns
CREATE TABLE t_gcol(
`col1` int,
`col2` int,
`col3` int,
g_col_1 INTEGER GENERATED ALWAYS AS (col3 + col3) VIRTUAL,
g_col_2 INTEGER GENERATED ALWAYS AS (col2 + col2) VIRTUAL,
g_col_3 INTEGER GENERATED ALWAYS AS (g_col_1 + g_col_2) VIRTUAL,
g_col_4 INTEGER GENERATED ALWAYS AS (col1 + g_col_3) STORED,
g_col_5 INTEGER GENERATED ALWAYS AS (g_col_3 + g_col_4) VIRTUAL
);
DROP TABLE t_gcol;

# create temp table with vsc (support)
CREATE TEMPORARY TABLE temp_2 (
    price DECIMAL(10,2),
    quantity INT,
    total_price DECIMAL(10,2) GENERATED ALWAYS AS (price * quantity) STORED
);
drop table temp_2;