drop database if exists db1;
create database db1;
use db1;
create table t1 (c1 int, c2 int, c3 varchar(10), c4 varchar(10));
insert into t1 values (1, 1, 'aaa', 'aaa'), (2, 2, 'aaA', 'aBB'), (3, 3, 'AAA', 'CDSV'), (4, 4, 'aaBa', 'Aaa');
select * from t1;
c1	c2	c3	c4
1	1	aaa	aaa
2	2	aaA	aBB
3	3	AAA	CDSV
4	4	aaBa	Aaa
select * from t1 where upper(c3) = 'AAA';
c1	c2	c3	c4
1	1	aaa	aaa
2	2	aaA	aBB
3	3	AAA	CDSV
explain select * from t1 where upper(c3) = 'AAA';
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	NULL	NULL	NULL	NULL	3	100.00	Using where
Warnings:
Note	1003	/* select#1 */ select `db1`.`t1`.`c1` AS `c1`,`db1`.`t1`.`c2` AS `c2`,`db1`.`t1`.`c3` AS `c3`,`db1`.`t1`.`c4` AS `c4` from `db1`.`t1` where (upper(`db1`.`t1`.`c3`) = 'AAA')
create index func_index_1 on t1 ((upper(c3)));
select * from t1 where upper(c3) = 'AAA';
c1	c2	c3	c4
1	1	aaa	aaa
2	2	aaA	aBB
3	3	AAA	CDSV
explain select * from t1 where upper(c3) = 'AAA';
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	func_index_1	func_index_1	43	const	1	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `db1`.`t1`.`c1` AS `c1`,`db1`.`t1`.`c2` AS `c2`,`db1`.`t1`.`c3` AS `c3`,`db1`.`t1`.`c4` AS `c4` from `db1`.`t1` where (upper(`c3`) = 'AAA')
create index func_index_2 on t1 ((substr(c4, 1, 1)));
select * from t1 where substr(c4, 1, 1) = 'a';
c1	c2	c3	c4
1	1	aaa	aaa
2	2	aaA	aBB
4	4	aaBa	Aaa
explain select * from t1 where substr(c4, 1, 1) = 'a';
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	func_index_2	func_index_2	7	const	1	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `db1`.`t1`.`c1` AS `c1`,`db1`.`t1`.`c2` AS `c2`,`db1`.`t1`.`c3` AS `c3`,`db1`.`t1`.`c4` AS `c4` from `db1`.`t1` where (substr(`c4`,1,1) = 'a')
analyze table t1;
Table	Op	Msg_type	Msg_text
db1.t1	analyze	status	OK
explain select * from t1 where substr(c4, 1, 1) = 'a';
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	func_index_2	func_index_2	7	const	4	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `db1`.`t1`.`c1` AS `c1`,`db1`.`t1`.`c2` AS `c2`,`db1`.`t1`.`c3` AS `c3`,`db1`.`t1`.`c4` AS `c4` from `db1`.`t1` where (substr(`c4`,1,1) = 'a')
create index func_index_3 on t1 ((substr(upper(c4), 1, 1)));
select * from t1 where substr(upper(c4), 1, 1) = 'a';
c1	c2	c3	c4
1	1	aaa	aaa
2	2	aaA	aBB
4	4	aaBa	Aaa
explain select * from t1 where substr(upper(c4), 1, 1) = 'a';
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	func_index_3	func_index_3	7	const	1	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `db1`.`t1`.`c1` AS `c1`,`db1`.`t1`.`c2` AS `c2`,`db1`.`t1`.`c3` AS `c3`,`db1`.`t1`.`c4` AS `c4` from `db1`.`t1` where (substr(upper(`c4`),1,1) = 'a')
analyze table t1;
Table	Op	Msg_type	Msg_text
db1.t1	analyze	status	OK
explain select * from t1 where substr(upper(c4), 1, 1) = 'a';
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	func_index_3	func_index_3	7	const	4	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `db1`.`t1`.`c1` AS `c1`,`db1`.`t1`.`c2` AS `c2`,`db1`.`t1`.`c3` AS `c3`,`db1`.`t1`.`c4` AS `c4` from `db1`.`t1` where (substr(upper(`c4`),1,1) = 'a')
create index func_index_4 on t1 ((upper(substr(c4, 1, 1))));
select * from t1 where upper(substr(c4, 1, 1)) = 'a';
c1	c2	c3	c4
1	1	aaa	aaa
2	2	aaA	aBB
4	4	aaBa	Aaa
explain select * from t1 where upper(substr(c4, 1, 1)) = 'a';
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	func_index_4	func_index_4	7	const	1	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `db1`.`t1`.`c1` AS `c1`,`db1`.`t1`.`c2` AS `c2`,`db1`.`t1`.`c3` AS `c3`,`db1`.`t1`.`c4` AS `c4` from `db1`.`t1` where (upper(substr(`c4`,1,1)) = 'a')
analyze table t1;
Table	Op	Msg_type	Msg_text
db1.t1	analyze	status	OK
explain select * from t1 where upper(substr(c4, 1, 1)) = 'a';
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	func_index_4	func_index_4	7	const	4	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `db1`.`t1`.`c1` AS `c1`,`db1`.`t1`.`c2` AS `c2`,`db1`.`t1`.`c3` AS `c3`,`db1`.`t1`.`c4` AS `c4` from `db1`.`t1` where (upper(substr(`c4`,1,1)) = 'a')
alter table t1 drop index func_index_1;
drop index func_index_2 on t1;
drop index func_index_3 on t1;
drop index func_index_4 on t1;
create table t2 (c1 int, c2 int, c3 varchar(10));
insert into t2 values (1, 1, 'aaa'), (2, 2, 'aaA'), (3, 3, 'AAA'), (4, 4, 'aaBa');
select * from t2;
c1	c2	c3
1	1	aaa
2	2	aaA
3	3	AAA
4	4	aaBa
create index func_index_abs on t2 ((abs(c1)));
create index func_index_2 on t2 ((c1 + c2));
ERROR HY000: Cantian does not support function indexes with multiple columns of arguments.
create table t3 (c1 int, c2 int, c3 varchar(10), index func_idx_1 ((upper(c3))));
insert into t3 values (1, 1, 'aaa'), (2, 2, 'aaA'), (3, 3, 'AAA'), (4, 4, 'aaBa');
select * from t3;
c1	c2	c3
1	1	aaa
2	2	aaA
3	3	AAA
4	4	aaBa
select * from t3 where upper(c3) = 'AAA';
c1	c2	c3
1	1	aaa
2	2	aaA
3	3	AAA
explain select * from t3 where upper(c3) = 'AAA';
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t3	NULL	ref	func_idx_1	func_idx_1	43	const	1	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `db1`.`t3`.`c1` AS `c1`,`db1`.`t3`.`c2` AS `c2`,`db1`.`t3`.`c3` AS `c3` from `db1`.`t3` where (upper(`c3`) = 'AAA')
create table t4 (c1 int, c2 int, c3 varchar(10), index func_idx_1 ((substr(c3, 1, 1))));
insert into t4 values (1, 1, 'aaa'), (2, 2, 'baa'), (3, 3, 'Bbb');
select * from t4 where substr(c3, 1, 1) = 'b';
c1	c2	c3
2	2	baa
3	3	Bbb
explain select * from t4 where substr(c3, 1, 1) = 'b';
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t4	NULL	ref	func_idx_1	func_idx_1	7	const	1	100.00	NULL
Warnings:
Note	1003	/* select#1 */ select `db1`.`t4`.`c1` AS `c1`,`db1`.`t4`.`c2` AS `c2`,`db1`.`t4`.`c3` AS `c3` from `db1`.`t4` where (substr(`c3`,1,1) = 'b')
create table t5 (c1 int, c2 int, c3 varchar(10), index func_idx_1 ((abs(c1))));
drop table t5;
create table t5 (c1 int, c2 int, c3 varchar(10), index func_idx_1 ((c1 + c2)));
ERROR HY000: Cantian does not support function indexes with multiple columns of arguments.
create table t6 (c1 int, c2 int);
create index index_func_idx_1 on t6 ((if(c1 = 1, 1, 3)));
ERROR HY000: Function if is not indexable
drop table t6;
create table t7 (c1 varbinary(20));
insert into t7 values ('ab一二'), ('ab一er');
create unique index func_idx1 on t7 ((substr(c1, 2, 2)));
ERROR 23000: Duplicate entry 'bä' for key 't7.func_idx1'
create unique index func_idx2 on t7 ((substr(c1, 2, 4)));
ERROR 23000: Duplicate entry 'b一' for key 't7.func_idx2'
alter table t7 add unique key func_idx3(c1(4));
ERROR 23000: Duplicate entry 'abä¸' for key 't7.func_idx3'
create unique index func_idx4 on t7 ((substr(upper(c1), 2, 2)));
ERROR 23000: Duplicate entry 'Bä' for key 't7.func_idx4'
drop table t7;
create table t8 (c1 blob);
insert into t8 values ('ab一二'), ('ab一er');
create unique index func_idx1 on t8 ((substr(c1, 2, 2)));
ERROR 23000: Duplicate entry 'bä' for key 't8.func_idx1'
create unique index func_idx2 on t8 ((substr(c1, 2, 4)));
ERROR 23000: Duplicate entry 'b一' for key 't8.func_idx2'
alter table t8 add unique key func_idx3(c1(4));
ERROR 23000: Duplicate entry 'abä¸' for key 't8.func_idx3'
drop table t8;
create table t9 (c1 varchar(20));
insert into t9 values ('ab一二'), ('ab一er');
create unique index func_idx1 on t9 ((substr(c1, 2, 2)));
ERROR 23000: Duplicate entry 'b一' for key 't9.func_idx1'
create unique index func_idx2 on t9 ((substr(c1, 2, 4)));
alter table t9 add unique key func_idx3(c1(4));
create unique index func_idx4 on t9 ((substr(upper(c1), 2, 2)));
ERROR 23000: Duplicate entry 'B一' for key 't9.func_idx4'
drop table t9;
create table t10 (c1 text);
insert into t10 values ('ab一二'), ('ab一er');
create unique index func_idx1 on t10 ((substr(c1, 2, 2)));
ERROR 23000: Duplicate entry 'b一' for key 't10.func_idx1'
create unique index func_idx2 on t10 ((substr(c1, 2, 4)));
alter table t10 add unique key func_idx3(c1(4));
drop table t10;
create table t11 (c1 varchar(20)) default charset = binary;
insert into t11 values ('ab一二'), ('ab一er');
create unique index func_idx1 on t11 ((substr(c1, 2, 2)));
ERROR 23000: Duplicate entry 'bä' for key 't11.func_idx1'
create unique index func_idx2 on t11 ((substr(c1, 2, 4)));
ERROR 23000: Duplicate entry 'b一' for key 't11.func_idx2'
alter table t11 add unique key func_idx3(c1(4));
ERROR 23000: Duplicate entry 'abä¸' for key 't11.func_idx3'
drop table t11;
create table t12 (c1 text) default charset = binary;
insert into t12 values ('ab一二'), ('ab一er');
create unique index func_idx1 on t12 ((substr(c1, 2, 2)));
ERROR 23000: Duplicate entry 'bä' for key 't12.func_idx1'
create unique index func_idx2 on t12 ((substr(c1, 2, 4)));
ERROR 23000: Duplicate entry 'b一' for key 't12.func_idx2'
alter table t12 add unique key func_idx3(c1(4));
ERROR 23000: Duplicate entry 'abä¸' for key 't12.func_idx3'
drop table t12;
drop database db1;
