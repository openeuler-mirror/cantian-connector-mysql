drop table if exists t1;
CREATE TABLE IF NOT EXISTS t1 (
a INT AUTO_INCREMENT PRIMARY KEY,
b INT NOT NULL,
c VARCHAR(20) DEFAULT NULL,
d DECIMAL NOT NULL
);
CREATE INDEX idx_b ON t1(b);
CREATE INDEX idx_c ON t1(c);
CREATE INDEX idx_d ON t1(d);
CREATE INDEX idx_bcd ON t1(b, c, d);
DROP PROCEDURE IF EXISTS insert_data_to_t1;
Warnings:
Note	1305	PROCEDURE test.insert_data_to_t1 does not exist
CREATE PROCEDURE insert_data_to_t1()
BEGIN
DECLARE i INT DEFAULT 0;
WHILE i < 500 DO
INSERT INTO t1 (b, c, d) VALUES (i, NULL, i + 2);
INSERT INTO t1 (b, c, d) VALUES (i + 1, i + 2, i + 3);
INSERT INTO t1 (b, c, d) VALUES (i + 2, i + 3, i + 4);
INSERT INTO t1 (b, c, d) VALUES (111, NULL, i);
INSERT INTO t1 (b, c, d) VALUES (121, 121, i);
INSERT INTO t1 (b, c, d) VALUES (131, i + 4, i + 5);
SET i = i + 1;
END WHILE;
END //
CALL insert_data_to_t1();
DROP PROCEDURE IF EXISTS insert_data_to_t1;
ANALYZE TABLE t1;
Table	Op	Msg_type	Msg_text
test.t1	analyze	status	OK
SELECT COUNT(1) FROM t1 WHERE b < 500;
COUNT(1)
2997
SELECT COUNT(1) FROM t1 WHERE b >= 200;
COUNT(1)
903
SELECT COUNT(1) FROM t1 WHERE b >= 200 AND c < 500;
COUNT(1)
598
SELECT COUNT(1) FROM t1 WHERE c < '700';
COUNT(1)
1907
SELECT COUNT(1) FROM t1 WHERE c <= '200';
COUNT(1)
837
SELECT COUNT(1) FROM t1 WHERE c >= '100';
COUNT(1)
1997
SELECT COUNT(1) FROM t1 WHERE c >= '100' AND c <= '200';
COUNT(1)
834
SELECT COUNT(1) FROM t1 WHERE c IS NULL;
COUNT(1)
1000
SELECT COUNT(1) FROM t1 WHERE c IS NOT NULL;
COUNT(1)
2000
SELECT COUNT(1) FROM t1 WHERE d >= 100.00;
COUNT(1)
2414
SELECT COUNT(1) FROM t1 WHERE d < 400.00;
COUNT(1)
2386
SELECT COUNT(1) FROM t1 WHERE d >= 100.00 AND d < 400.00;
COUNT(1)
1800
EXPLAIN SELECT * FROM t1 FORCE INDEX (idx_b) WHERE b < 500;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	idx_b	idx_b	4	NULL	3000	100.00	Using where; Using pushed condition (`test`.`t1`.`b` < 500)
EXPLAIN SELECT * FROM t1 FORCE INDEX (idx_b) WHERE b >= 200;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	idx_b	idx_b	4	NULL	912	100.00	Using where; Using pushed condition (`test`.`t1`.`b` >= 200)
EXPLAIN SELECT * FROM t1 FORCE INDEX (idx_b) WHERE b >= 200 AND c < 500;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	idx_b	idx_b	4	NULL	912	33.33	Using where; Using pushed condition (`test`.`t1`.`b` >= 200)
EXPLAIN SELECT * FROM t1 FORCE INDEX (idx_c) WHERE c < '700';
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	idx_c	idx_c	83	NULL	2864	100.00	Using where; Using pushed condition (`test`.`t1`.`c` < '700')
EXPLAIN SELECT * FROM t1 FORCE INDEX (idx_c) WHERE c <= '200';
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	idx_c	idx_c	83	NULL	1263	100.00	Using where; Using pushed condition (`test`.`t1`.`c` <= '200')
EXPLAIN SELECT * FROM t1 FORCE INDEX (idx_c) WHERE c >= '100';
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	idx_c	idx_c	83	NULL	3000	100.00	Using where; Using pushed condition (`test`.`t1`.`c` >= '100')
EXPLAIN SELECT * FROM t1 FORCE INDEX (idx_c) WHERE c >= '100' AND c <= '200';
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	idx_c	idx_c	83	NULL	1263	100.00	Using where; Using pushed condition ((`test`.`t1`.`c` >= '100') and (`test`.`t1`.`c` <= '200'))
EXPLAIN SELECT * FROM t1 WHERE c IS NULL;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	idx_c	idx_c	83	const	1000	100.00	Using where; Using pushed condition (`test`.`t1`.`c` is null)
EXPLAIN SELECT * FROM t1 FORCE INDEX (idx_c) WHERE c IS NOT NULL;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	idx_c	idx_c	83	NULL	2000	100.00	Using where; Using pushed condition (`test`.`t1`.`c` is not null)
EXPLAIN SELECT * FROM t1 FORCE INDEX (idx_d) WHERE d >= 100.00;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	idx_d	idx_d	5	NULL	2421	100.00	Using where; Using pushed condition (`test`.`t1`.`d` >= 100)
EXPLAIN SELECT * FROM t1 FORCE INDEX (idx_d) WHERE d < 400.00;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	idx_d	idx_d	5	NULL	2397	100.00	Using where; Using pushed condition (`test`.`t1`.`d` < 400)
EXPLAIN SELECT * FROM t1 FORCE INDEX (idx_d) WHERE d >= 100.00 AND d < 400.00;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	idx_d	idx_d	5	NULL	1807	100.00	Using where; Using pushed condition ((`test`.`t1`.`d` >= 100) and (`test`.`t1`.`d` < 400))
SELECT COUNT(1) FROM t1 WHERE b = 111 AND c IS NULL AND d < 100;
COUNT(1)
100
SELECT COUNT(1) FROM t1 WHERE b = 121 AND c = '121' AND d >= 10;
COUNT(1)
490
SELECT COUNT(1) FROM t1 WHERE b < 300 AND c > '300';
COUNT(1)
428
SELECT COUNT(1) FROM t1 WHERE b = 121 AND c IS NULL AND  d >= 100 AND d < 400;
COUNT(1)
1
SELECT COUNT(1) FROM t1 WHERE b = 121 AND c IS NOT NULL and d > 200;
COUNT(1)
299
SELECT COUNT(1) FROM t1 WHERE b = 121 AND d >= 100.00;
COUNT(1)
403
SELECT COUNT(1) FROM t1 WHERE b = 131 AND c >= '100' AND  c <= '400';
COUNT(1)
334
EXPLAIN SELECT * FROM t1 FORCE INDEX (idx_bcd) WHERE b = 111 AND c IS NULL AND d < 100;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	idx_bcd	idx_bcd	92	NULL	32	100.00	Using where; Using pushed condition ((`test`.`t1`.`b` = 111) and (`test`.`t1`.`c` is null) and (`test`.`t1`.`d` < 100))
EXPLAIN SELECT * FROM t1 FORCE INDEX (idx_bcd) WHERE b = 121 AND c = '121' AND d >= 100;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	idx_bcd	idx_bcd	92	NULL	103	100.00	Using where; Using pushed condition ((`test`.`t1`.`c` = '121') and (`test`.`t1`.`b` = 121) and (`test`.`t1`.`d` >= 100))
EXPLAIN SELECT * FROM t1 WHERE b < 300 AND c > '300';
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ALL	idx_b,idx_c,idx_bcd	NULL	NULL	NULL	3000	33.31	Using where; Using pushed condition ((`test`.`t1`.`b` < 300) and (`test`.`t1`.`c` > '300'))
EXPLAIN SELECT * FROM t1 FORCE INDEX (idx_bcd) WHERE b = 121 AND c IS NULL AND d >= 100 AND d < 400;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	idx_bcd	idx_bcd	92	NULL	101	100.00	Using where; Using pushed condition ((`test`.`t1`.`b` = 121) and (`test`.`t1`.`c` is null) and (`test`.`t1`.`d` >= 100) and (`test`.`t1`.`d` < 400))
EXPLAIN SELECT * FROM t1 WHERE b = 121 AND c IS NOT NULL and d > 200;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	idx_b,idx_c,idx_d,idx_bcd	idx_b	4	const	507	40.29	Using where; Using pushed condition ((`test`.`t1`.`c` is not null) and (`test`.`t1`.`d` > 200))
EXPLAIN SELECT * FROM t1 WHERE b = 121 AND d >= 100.00;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	ref	idx_b,idx_d,idx_bcd	idx_b	4	const	507	80.70	Using where; Using pushed condition (`test`.`t1`.`d` >= 100)
EXPLAIN SELECT * FROM t1 FORCE INDEX (idx_bcd) WHERE b = 131 AND c >= '100' AND  c <= '400';
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	idx_bcd	idx_bcd	87	NULL	381	100.00	Using where; Using pushed condition ((`test`.`t1`.`b` = 131) and (`test`.`t1`.`c` >= '100') and (`test`.`t1`.`c` <= '400'))
drop table t1;
create table t1 (a tinyint unsigned not null primary key);
insert into t1 values (1),(2),(3),(4),(5),(127),(128),(253),(254),(255);
analyze table t1;
Table	Op	Msg_type	Msg_text
test.t1	analyze	status	OK
explain select * from t1 where a > 253;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	PRIMARY	PRIMARY	1	NULL	2	100.00	Using where; Using pushed condition (`test`.`t1`.`a` > 253); Using index
explain select * from t1 where a < 3;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	NULL	range	PRIMARY	PRIMARY	1	NULL	2	100.00	Using where; Using pushed condition (`test`.`t1`.`a` < 3); Using index
drop table t1;
create table t2 (a tinyint signed not null primary key);
insert into t2 values (-128),(-127),(-126),(-125),(0),(1),(121),(122),(125),(127);
analyze table t2;
Table	Op	Msg_type	Msg_text
test.t2	analyze	status	OK
explain select * from t2 where a > 122;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	NULL	range	PRIMARY	PRIMARY	1	NULL	2	100.00	Using where; Using pushed condition (`test`.`t2`.`a` > 122); Using index
explain select * from t2 where a < -120;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	NULL	range	PRIMARY	PRIMARY	1	NULL	4	100.00	Using where; Using pushed condition (`test`.`t2`.`a` < <cache>(-(120))); Using index
drop table t2;
create table t3 (a smallint unsigned not null primary key);
insert into t3 values (1),(2),(3),(4),(5),(127),(128),(65533),(65534),(65535);
analyze table t3;
Table	Op	Msg_type	Msg_text
test.t3	analyze	status	OK
explain select * from t3 where a > 65533;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t3	NULL	range	PRIMARY	PRIMARY	2	NULL	2	100.00	Using where; Using pushed condition (`test`.`t3`.`a` > 65533); Using index
explain select * from t3 where a < 3;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t3	NULL	range	PRIMARY	PRIMARY	2	NULL	2	100.00	Using where; Using pushed condition (`test`.`t3`.`a` < 3); Using index
drop table t3;
create table t4 (a smallint signed not null primary key);
insert into t4 values (-32768),(-32767),(-32766),(-32765),(0),(1),(32764),(32765),(32766),(32767);
analyze table t4;
Table	Op	Msg_type	Msg_text
test.t4	analyze	status	OK
explain select * from t4 where a > 32765;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t4	NULL	range	PRIMARY	PRIMARY	2	NULL	2	100.00	Using where; Using pushed condition (`test`.`t4`.`a` > 32765); Using index
explain select * from t4 where a < -32766;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t4	NULL	range	PRIMARY	PRIMARY	2	NULL	2	100.00	Using where; Using pushed condition (`test`.`t4`.`a` < <cache>(-(32766))); Using index
drop table t4;
create table t5 (a mediumint unsigned not null primary key);
insert into t5 values (1),(2),(3),(4),(5),(127),(128),(16777213),(16777214),(16777215);
analyze table t5;
Table	Op	Msg_type	Msg_text
test.t5	analyze	status	OK
explain select * from t5 where a > 16777213;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t5	NULL	range	PRIMARY	PRIMARY	3	NULL	2	100.00	Using where; Using pushed condition (`test`.`t5`.`a` > 16777213); Using index
explain select * from t5 where a < 3;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t5	NULL	range	PRIMARY	PRIMARY	3	NULL	2	100.00	Using where; Using pushed condition (`test`.`t5`.`a` < 3); Using index
drop table t5;
create table t6 (a mediumint signed not null primary key);
insert into t6 values (-8388608),(-8388607),(-32766),(-32765),(0),(1),(8388604),(8388605),(8388606),(8388607);
analyze table t6;
Table	Op	Msg_type	Msg_text
test.t6	analyze	status	OK
explain select * from t6 where a > 8388605;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t6	NULL	range	PRIMARY	PRIMARY	3	NULL	2	100.00	Using where; Using pushed condition (`test`.`t6`.`a` > 8388605); Using index
explain select * from t6 where a < -32766;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t6	NULL	range	PRIMARY	PRIMARY	3	NULL	2	100.00	Using where; Using pushed condition (`test`.`t6`.`a` < <cache>(-(32766))); Using index
drop table t6;
create table t7 (a tinyint unsigned not null primary key);
create procedure insert_rows()
begin
DECLARE i INT DEFAULT 0;
WHILE i <= 255 do
insert into t7 values(i);
set i = i + 1;
end while;
end//
call insert_rows;
drop procedure insert_rows;
analyze table t7;
Table	Op	Msg_type	Msg_text
test.t7	analyze	status	OK
explain select * from t7 where a > 250;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t7	NULL	range	PRIMARY	PRIMARY	1	NULL	5	100.00	Using where; Using pushed condition (`test`.`t7`.`a` > 250); Using index
select count(*) from t7 where a > 250;
count(*)
5
explain select * from t7 where a < 10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t7	NULL	range	PRIMARY	PRIMARY	1	NULL	11	100.00	Using where; Using pushed condition (`test`.`t7`.`a` < 10); Using index
select count(*) from t7 where a < 10;
count(*)
10
drop table t7;
create table t8 (a tinyint signed not null primary key);
create procedure insert_rows()
begin
declare i int default -128;
while i <= 127 do
insert into t8 values(i);
set i = i + 1;
end while;
end//
call insert_rows;
drop procedure insert_rows;
analyze table t8;
Table	Op	Msg_type	Msg_text
test.t8	analyze	status	OK
explain select * from t8 where a > 122;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t8	NULL	range	PRIMARY	PRIMARY	1	NULL	5	100.00	Using where; Using pushed condition (`test`.`t8`.`a` > 122); Using index
select count(*) from t8 where a > 122;
count(*)
5
explain select * from t8 where a < -120;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t8	NULL	range	PRIMARY	PRIMARY	1	NULL	9	100.00	Using where; Using pushed condition (`test`.`t8`.`a` < <cache>(-(120))); Using index
select count(*) from t8 where a < -120;
count(*)
8
drop table t8;
create table t9 (a smallint signed not null primary key);
create procedure insert_rows()
begin
declare i int default -32768;
while i <= 32767 do
insert into t9 values(i);
set i = i + 100;
end while;
end//
call insert_rows;
drop procedure insert_rows;
analyze table t9;
Table	Op	Msg_type	Msg_text
test.t9	analyze	status	OK
explain select * from t9 where a > 30000;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t9	NULL	range	PRIMARY	PRIMARY	2	NULL	27	100.00	Using where; Using pushed condition (`test`.`t9`.`a` > 30000); Using index
select count(*) from t9 where a > 30000;
count(*)
28
explain select * from t9 where a < -30000;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t9	NULL	range	PRIMARY	PRIMARY	2	NULL	30	100.00	Using where; Using pushed condition (`test`.`t9`.`a` < <cache>(-(30000))); Using index
select count(*) from t9 where a < -30000;
count(*)
28
drop table t9;
create table t10 (a smallint unsigned not null primary key);
create procedure insert_rows()
begin
declare i int default 1;
while i <= 65535 do
insert into t10 values(i);
set i = i + 100;
end while;
end//
call insert_rows;
drop procedure insert_rows;
analyze table t10;
Table	Op	Msg_type	Msg_text
test.t10	analyze	status	OK
explain select * from t10 where a > 60000;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t10	NULL	range	PRIMARY	PRIMARY	2	NULL	55	100.00	Using where; Using pushed condition (`test`.`t10`.`a` > 60000); Using index
select count(*) from t10 where a > 60000;
count(*)
56
explain select * from t10 where a < 10000;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t10	NULL	range	PRIMARY	PRIMARY	2	NULL	102	100.00	Using where; Using pushed condition (`test`.`t10`.`a` < 10000); Using index
select count(*) from t10 where a < 10000;
count(*)
100
drop table t10;
create table t11 (a mediumint unsigned not null primary key);
create procedure insert_rows()
begin
declare i int default 1;
while i <= 16777215 do
insert into t11 values(i);
set i = i + 10000;
end while;
end//
call insert_rows;
drop procedure insert_rows;
analyze table t11;
Table	Op	Msg_type	Msg_text
test.t11	analyze	status	OK
explain select * from t11 where a > 15000000;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t11	NULL	range	PRIMARY	PRIMARY	3	NULL	177	100.00	Using where; Using pushed condition (`test`.`t11`.`a` > 15000000); Using index
select count(*) from t11 where a > 15000000;
count(*)
178
explain select * from t11 where a < 100000;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t11	NULL	range	PRIMARY	PRIMARY	3	NULL	12	100.00	Using where; Using pushed condition (`test`.`t11`.`a` < 100000); Using index
select count(*) from t11 where a < 100000;
count(*)
10
drop table t11;
create table t12 (a mediumint signed not null primary key);
create procedure insert_rows()
begin
declare i int default -8388608;
while i <= 8388607 do
insert into t12 values(i);
set i = i + 10000;
end while;
end//
call insert_rows;
drop procedure insert_rows;
analyze table t12;
Table	Op	Msg_type	Msg_text
test.t12	analyze	status	OK
explain select * from t12 where a > 8000000;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t12	NULL	range	PRIMARY	PRIMARY	3	NULL	38	100.00	Using where; Using pushed condition (`test`.`t12`.`a` > 8000000); Using index
select count(*) from t12 where a > 8000000;
count(*)
39
explain select * from t12 where a < -8000000;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t12	NULL	range	PRIMARY	PRIMARY	3	NULL	41	100.00	Using where; Using pushed condition (`test`.`t12`.`a` < <cache>(-(8000000))); Using index
select count(*) from t12 where a < -8000000;
count(*)
39
drop table t12;
create table t13 (a int unsigned not null primary key);
create procedure insert_rows()
begin
declare i bigint default 1;
while i <= 4294967295 do
insert into t13 values(i);
set i = i + 1000000;
end while;
end//
call insert_rows;
drop procedure insert_rows;
analyze table t13;
Table	Op	Msg_type	Msg_text
test.t13	analyze	status	OK
explain select * from t13 where a > 4000000000;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t13	NULL	range	PRIMARY	PRIMARY	4	NULL	294	100.00	Using where; Using pushed condition (`test`.`t13`.`a` > 4000000000); Using index
select count(*) from t13 where a > 4000000000;
count(*)
295
explain select * from t13 where a < 100000000;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t13	NULL	range	PRIMARY	PRIMARY	4	NULL	102	100.00	Using where; Using pushed condition (`test`.`t13`.`a` < 100000000); Using index
select count(*) from t13 where a < 100000000;
count(*)
100
drop table t13;
create table t14 (a int signed not null primary key);
create procedure insert_rows()
begin
declare i bigint default -2147483648;
while i <= 2147483647 do
insert into t14 values(i);
set i = i + 1000000;
end while;
end//
call insert_rows;
drop procedure insert_rows;
analyze table t14;
Table	Op	Msg_type	Msg_text
test.t14	analyze	status	OK
explain select * from t14 where a > 2000000000;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t14	NULL	range	PRIMARY	PRIMARY	4	NULL	146	100.00	Using where; Using pushed condition (`test`.`t14`.`a` > 2000000000); Using index
select count(*) from t14 where a > 2000000000;
count(*)
147
explain select * from t14 where a < -2000000000;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t14	NULL	range	PRIMARY	PRIMARY	4	NULL	149	100.00	Using where; Using pushed condition (`test`.`t14`.`a` < <cache>(-(2000000000))); Using index
select count(*) from t14 where a < -2000000000;
count(*)
148
drop table t14;
create table t15 (a bigint unsigned not null primary key);
create procedure insert_rows()
begin
declare i bigint unsigned default 1;
while i < 18346744073709551615 do
insert into t15 values(i);
set i = i + 100000000000000000;
end while;
end//
call insert_rows;
drop procedure insert_rows;
analyze table t15;
Table	Op	Msg_type	Msg_text
test.t15	analyze	status	OK
explain select * from t15 where a > 18000000000000000000;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t15	NULL	range	PRIMARY	PRIMARY	8	NULL	4	100.00	Using where; Using pushed condition (`test`.`t15`.`a` > 18000000000000000000); Using index
select count(*) from t15 where a > 18000000000000000000;
count(*)
4
explain select * from t15 where a < 100000000000000000;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t15	NULL	range	PRIMARY	PRIMARY	8	NULL	1	100.00	Using where; Using pushed condition (`test`.`t15`.`a` < 100000000000000000); Using index
select count(*) from t15 where a < 100000000000000000;
count(*)
1
drop table t15;
create table t16 (a bigint signed not null primary key);
create procedure insert_rows()
begin
declare i bigint default -9223372036854775808;
while i < 9213372036854775807 do
insert into t16 values(i);
set i = i + 10000000000000000;
end while;
end//
call insert_rows;
drop procedure insert_rows;
analyze table t16;
Table	Op	Msg_type	Msg_text
test.t16	analyze	status	OK
explain select * from t16 where a > 9000000000000000000;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t16	NULL	range	PRIMARY	PRIMARY	8	NULL	21	100.00	Using where; Using pushed condition (`test`.`t16`.`a` > 9000000000000000000); Using index
select count(*) from t16 where a > 9000000000000000000;
count(*)
21
explain select * from t16 where a < -9000000000000000000;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t16	NULL	range	PRIMARY	PRIMARY	8	NULL	24	100.00	Using where; Using pushed condition (`test`.`t16`.`a` < -9000000000000000000); Using index
select count(*) from t16 where a < -9000000000000000000;
count(*)
23
drop table t16;
