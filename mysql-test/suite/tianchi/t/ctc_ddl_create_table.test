#
#  Copyright (C) 2023. Huawei Technologies Co., Ltd. All rights reserved.

#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License, version 2.0,
#   as published by the Free Software Foundation.

#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License, version 2.0, for more details.

#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301  USA 
--disable_warnings
drop table if exists DEMO;
drop table if exists t1;
--enable_warnings
#特别注意，每个测试用例直接用2行空行隔开，中间不要有任何空行


#创建表的相关测试
#create a table.
create table DEMO (ID integer not null, NAME varchar(10), AGE integer, GRADE real) DEFAULT CHARSET=utf8;
desc DEMO;
show create table DEMO;
show index from DEMO;
# insert some data to table.
insert into DEMO values (1, 'LIOR', 35, 6.9);
insert into DEMO values (4, 'MIKE', 55, 99.92);
insert into DEMO values (8, 'ROMAN', 40, 94.1);
insert into DEMO values (16, 'DAN', 60, 1234567890);
insert into DEMO values (32, 'ZVI', 35, 777.666);
insert into DEMO values (1, 'Eitan', NULL, 4.9);
insert into DEMO values (888888, 'zhangdi', NULL, 10000.8);
insert into DEMO values (1131, 'Hisses', 1, NULL);
--error 1048
#第一列不允许为空
insert into DEMO values (null, 'ff', 36, 8.9);
--error 1406
insert into DEMO values (12, 'abcdefghija', 36, 8.9);
insert into DEMO values (12, 'abcdefghij', 36, 8.9);
insert into DEMO values (12, 'abcdefghi中', 36, 8.9);
--error 1406
insert into DEMO values (12, 'abcdefghi中国', 36, 8.9);
#执行 select
SELECT * FROM DEMO;
desc DEMO;
show create table DEMO;
show index from DEMO;
#drop Table
drop table DEMO;


#create table for primary key test (创建table过程中直接创建主键)
create table DEMO (ID integer PRIMARY KEY, NAME varchar(19), AGE integer, GRADE real);
desc DEMO;
show create table DEMO;
show index from DEMO;
insert into DEMO values (1, 'LIOR', 35, 6.9);
--error 1062
insert into DEMO values (1, 'MIKE', 55, 99.92);
--error 1364
#ERROR 1364 (HY000): Field 'ID' doesn't have a default value
insert into DEMO (NAME,AGE,GRADE) values ('MIKE', 55, 99.92);
insert into DEMO values (2, 'LIOR', 35, 6.9);
alter table DEMO drop primary key;
#删除主键后，原来重复的数据可以插入
insert into DEMO values (1, 'MIKE', 55, 99.92);
#执行 select
SELECT * FROM DEMO;
desc DEMO;
show create table DEMO;
show index from DEMO;
#drop Table
drop table DEMO;


#create table for primary key test (复合主键测试，组合索引, 包含删除主键，primary key方式创建主键)
#复合主键有两种测试语句
#create table 表名(列名1 数据类型, 列名2 数据类型, constraint 主键约束的名字  primary key(列名1,列名2));
#create table 表名(列名1 数据类型, 列名2 数据类型, primary key(列名1,列名2));
create table DEMO (ID integer, NAME varchar(19), AGE integer, GRADE real, PRIMARY KEY (ID, NAME));
desc DEMO;
show create table DEMO;
show index from DEMO;
insert into DEMO values (888888, 'zhangdi', 35, 10000.8);
--error 1062
insert into DEMO values (888888, 'zhangdi', 35, 10000.8); #因为ID和NAME完全相同，所以无法插入
insert into DEMO values (888889, 'zhangdi', 11, 99.8);
insert into DEMO values (888888, 'zhangdi1', 35, 10000.8);
insert into DEMO values (122, 'LIOR', 22, 77.8);
insert into DEMO values (31434, 'ALEX', 43, 100.8);
alter table DEMO drop primary key;
#删除主键后，原来重复的数据可以插入
insert into DEMO values (888888, 'zhangdi', 35, 10000.8);
#执行 select
SELECT * FROM DEMO;
desc DEMO;
show create table DEMO;
show index from DEMO;
#drop Table
drop table DEMO;


#create table for primary key test (复合主键测试，组合索引, 包含删除主键，constraint方式创建主键,通过drop primary key方式删除主键)
#复合主键有两种测试语句
#create table 表名(列名1 数据类型, 列名2 数据类型, constraint 主键约束的名字  primary key(列名1,列名2));
#create table 表名(列名1 数据类型, 列名2 数据类型, primary key(列名1,列名2));
create table DEMO (ID integer, NAME varchar(19), AGE integer, GRADE real, CONSTRAINT pk_demo PRIMARY KEY (ID, NAME));
desc DEMO;
show create table DEMO;
show index from DEMO;
insert into DEMO values (888888, 'zhangdi', 35, 10000.8);
--error 1062
insert into DEMO values (888888, 'zhangdi', 35, 10000.8); #因为ID和NAME完全相同，所以无法插入
insert into DEMO values (888889, 'zhangdi', 11, 99.8);
insert into DEMO values (888888, 'zhangdi1', 35, 10000.8);
insert into DEMO values (122, 'LIOR', 22, 77.8);
insert into DEMO values (31434, 'ALEX', 43, 100.8);
alter table DEMO drop primary key;
#删除主键后，原来重复的数据可以插入
insert into DEMO values (888888, 'zhangdi', 35, 10000.8);
#执行 select
SELECT * FROM DEMO;
desc DEMO;
show create table DEMO;
show index from DEMO;
#drop Table
drop table DEMO;


#create table for primary key test (复合主键测试，组合索引, 包含删除主键，constraint方式创建主键,通过drop primary key方式删除主键)
#复合主键有两种测试语句
#create table 表名(列名1 数据类型, 列名2 数据类型, constraint 主键约束的名字  primary key(列名1,列名2));
#create table 表名(列名1 数据类型, 列名2 数据类型, primary key(列名1,列名2));
create table DEMO (ID integer, NAME varchar(19), AGE integer, GRADE real, CONSTRAINT pk_demo PRIMARY KEY (ID, NAME));
desc DEMO;
show create table DEMO;
show index from DEMO;
insert into DEMO values (888888, 'zhangdi', 35, 10000.8);
--error 1062
insert into DEMO values (888888, 'zhangdi', 35, 10000.8); #因为ID和NAME完全相同，所以无法插入
insert into DEMO values (888889, 'zhangdi', 11, 99.8);
insert into DEMO values (888888, 'zhangdi1', 35, 10000.8);
insert into DEMO values (122, 'LIOR', 22, 77.8);
insert into DEMO values (31434, 'ALEX', 43, 100.8);
--error 3940
#ERROR 3940 (HY000): Constraint 'pk_demo' does not exist.
#无法通过constraint的方式删除主键
alter table DEMO drop constraint pk_demo;
alter table DEMO drop primary key;
#删除主键后，原来重复的数据可以插入
insert into DEMO values (888888, 'zhangdi', 35, 10000.8);
#执行 select
SELECT * FROM DEMO;
desc DEMO;
show create table DEMO;
show index from DEMO;
#drop Table
drop table DEMO;


#create table for unique key test (创建table过程中直接创建唯一键,单列，unique or unique key)
create table DEMO (ID integer UNIQUE KEY, NAME varchar(19), AGE integer, GRADE real);
desc DEMO;
show create table DEMO;
show index from DEMO;
#只输入unique 不写key，可能会影响之后删除列的逻辑
insert into DEMO values (1, 'LIOR', 35, 6.9);
--error 1062
insert into DEMO values (1, 'MIKE', 55, 99.92);
#null不认为是违反uinque约束
insert into DEMO values (null,'DAN', 45, 33.33);
insert into DEMO values (null,'DAN', 45, 33.33);
insert into DEMO values (null,'DAN', 45, 33.33);
insert into DEMO values (2, 'MIKE', 55, 99.92);
ALTER TABLE DEMO DROP INDEX ID;
--error 1091
ALTER TABLE DEMO DROP INDEX ID;
#删除了unique索引以后，可以插入重复数据
insert into DEMO values (1, 'MIKE', 55, 99.92);
#执行 select
SELECT * FROM DEMO;
desc DEMO;
show create table DEMO;
show index from DEMO;
#drop Table
drop table DEMO;


#create table for unique key test (创建table过程中直接创建唯一键,单列，unique or unique key)
create table DEMO (ID integer UNIQUE, NAME varchar(19), AGE integer, GRADE real);
desc DEMO;
show create table DEMO;
show index from DEMO;
#只输入unique 不写key，不影响之后删除列的逻辑
insert into DEMO values (1, 'LIOR', 35, 6.9);
--error 1062
insert into DEMO values (1, 'MIKE', 55, 99.92);
#null不认为是违反uinque约束
insert into DEMO values (null,'DAN', 45, 33.33);
insert into DEMO values (null,'DAN', 45, 33.33);
insert into DEMO values (null,'DAN', 45, 33.33);
insert into DEMO values (2, 'MIKE', 55, 99.92);
ALTER TABLE DEMO DROP INDEX ID;
--error 1091
ALTER TABLE DEMO DROP INDEX ID;
#删除了unique索引以后，可以插入重复数据
insert into DEMO values (1, 'MIKE', 55, 99.92);
#执行 select
SELECT * FROM DEMO;
desc DEMO;
show create table DEMO;
show index from DEMO;
#drop Table
drop table DEMO;


#create table for unique key test (创建table过程中直接创建唯一键,单列，通过CONSTRAINT添加)
create table DEMO (ID integer, NAME varchar(10), AGE integer, GRADE real, CONSTRAINT uk_demo UNIQUE KEY (ID));
desc DEMO;
show create table DEMO;
show index from DEMO;
insert into DEMO values (1, 'LIOR', 35, 6.9);
--error 1062
insert into DEMO values (1, 'LIOR', 35, 6.9);
--error 1062
insert into DEMO values (1, 'MIKE', 55, 99.92);
insert into DEMO values (2, 'MIKE', 55, 99.92);
insert into DEMO values (3, 'LIOR', 35, 6.9);
#null不认为是违反uinque约束
insert into DEMO values (null, 'LIOR', 35, 6.9);
insert into DEMO values (null, 'LIOR', 35, 6.9);
insert into DEMO values (null, 'LIOR', 35, 6.9);
insert into DEMO values (null, 'LIOR', 35, 6.9);
#通过CONSTRAINT添加的unique约束，索引名字为约束名字，不能通过列名来删除了
--error 1091
ALTER TABLE DEMO DROP INDEX ID;
ALTER TABLE DEMO DROP INDEX uk_demo;
#删除了unique索引以后，可以插入重复数据
insert into DEMO values (1, 'MIKE', 55, 99.92);
#执行 select
desc DEMO;
show create table DEMO;
show index from DEMO;
#drop Table
drop table DEMO;


#create table for unique key test (创建table过程中直接创建唯一键,单列，通过CONSTRAINT添加)
create table DEMO (ID integer, NAME varchar(10), AGE integer, GRADE real, CONSTRAINT uk_demo UNIQUE KEY (ID));
desc DEMO;
show create table DEMO;
show index from DEMO;
insert into DEMO values (1, 'LIOR', 35, 6.9);
--error 1062
insert into DEMO values (1, 'LIOR', 35, 6.9);
--error 1062
insert into DEMO values (1, 'MIKE', 55, 99.92);
insert into DEMO values (2, 'MIKE', 55, 99.92);
insert into DEMO values (3, 'LIOR', 35, 6.9);
#null不认为是违反uinque约束
insert into DEMO values (null, 'LIOR', 35, 6.9);
insert into DEMO values (null, 'LIOR', 35, 6.9);
insert into DEMO values (null, 'LIOR', 35, 6.9);
insert into DEMO values (null, 'LIOR', 35, 6.9);
#通过CONSTRAINT添加的unique约束，索引名字为约束名字，不能通过列名来删除了
--error 1091
ALTER TABLE DEMO DROP INDEX ID;
alter table DEMO drop constraint uk_demo;
#删除了unique索引以后，可以插入重复数据
insert into DEMO values (1, 'MIKE', 55, 99.92);
#执行 select
desc DEMO;
show create table DEMO;
show index from DEMO;
#drop Table
drop table DEMO;


#create table for unique key test (创建table过程中直接创建唯一键,单列，通过CONSTRAINT添加,约束名字可以就是列名)
create table DEMO (ID integer, NAME varchar(10), AGE integer, GRADE real, CONSTRAINT ID UNIQUE KEY (ID));
desc DEMO;
show create table DEMO;
show index from DEMO;
insert into DEMO values (1, 'LIOR', 35, 6.9);
--error 1062
insert into DEMO values (1, 'LIOR', 35, 6.9);
--error 1062
insert into DEMO values (1, 'MIKE', 55, 99.92);
insert into DEMO values (2, 'MIKE', 55, 99.92);
insert into DEMO values (3, 'LIOR', 35, 6.9);
#null不认为是违反uinque约束
insert into DEMO values (null, 'LIOR', 35, 6.9);
insert into DEMO values (null, 'LIOR', 35, 6.9);
insert into DEMO values (null, 'LIOR', 35, 6.9);
insert into DEMO values (null, 'LIOR', 35, 6.9);
#下面这两种删除约束的方式都可以
ALTER TABLE DEMO DROP INDEX ID;
#alter table DEMO drop constraint ID;
#删除了unique索引以后，可以插入重复数据
insert into DEMO values (1, 'MIKE', 55, 99.92);
#执行 select
desc DEMO;
show create table DEMO;
show index from DEMO;
#drop Table
drop table DEMO;


#create table for unique key test (创建table过程中直接创建唯一键,多列，unique or unique key)
create table DEMO (ID integer, NAME varchar(10), AGE integer, GRADE real, CONSTRAINT uk_demo UNIQUE KEY (ID, NAME));
desc DEMO;
show create table DEMO;
show index from DEMO;
insert into DEMO values (1, 'LIOR', 35, 6.9);
--error 1062
insert into DEMO values (1, 'LIOR', 35, 6.9);
insert into DEMO values (1, 'MIKE', 55, 99.92);
insert into DEMO values (null, 'LIOR', 35, 6.9);
insert into DEMO values (null, 'LIOR', 35, 6.9);
#CONSTRAINT添加的复合uinque索引,不能通过下面单一索引删除
--error 1091
ALTER TABLE DEMO DROP INDEX ID;
--error 1091
ALTER TABLE DEMO DROP INDEX NAME;
alter table DEMO drop constraint uk_demo;
#删除了unique索引以后，可以插入重复数据
insert into DEMO values (1, 'MIKE', 55, 99.92);
#执行 select
desc DEMO;
show create table DEMO;
show index from DEMO;
#drop Table
drop table DEMO;


#create table for auto_increment test (创建table过程中直接添加自增)
#PRIMARY KEY & AUTO_INCREMENT
create table DEMO (ID integer PRIMARY KEY auto_increment ,AGE integer, GRADE real);
desc DEMO;
show create table DEMO;
show index from DEMO;
insert into DEMO (AGE, GRADE) values (20, 5.5);
insert into DEMO (AGE, GRADE) values (30,6.5);
insert into DEMO (AGE, GRADE) values (40,7.5);
insert into DEMO values (null,40,7.5);
insert into DEMO values (null,40,7.5);
#主键重复
--error 1062
insert into DEMO values (4,40,7.5);
#执行 select
SELECT * FROM DEMO;
desc DEMO;
show create table DEMO;
show index from DEMO;
#drop Table
drop table DEMO;


#UNIQUE KEY & AUTO_INCREMENT
create table DEMO (ID integer UNIQUE  auto_increment,AGE integer, GRADE real);
desc DEMO;
show create table DEMO;
show index from DEMO;
insert into DEMO (AGE, GRADE) values (20, 5.5);
insert into DEMO (AGE, GRADE) values (30,6.5);
insert into DEMO (AGE, GRADE) values (40,7.5);
insert into DEMO values (null,40,7.5);
insert into DEMO values (null,40,7.5);
--error 1062
insert into DEMO values (4,40,7.5);
#执行 select
SELECT * FROM DEMO;
desc DEMO;
show create table DEMO;
show index from DEMO;
#drop Table
drop table DEMO;


#create table for default value & default null test (创建table过程中添加默认值和添加默认为空)
create table DEMO (ID integer DEFAULT NULL, NAME varchar(19), AGE integer DEFAULT 100, GRADE real);
desc DEMO;
show create table DEMO;
show index from DEMO;
INSERT INTO DEMO(NAME,GRADE) VALUES('test1',10);
INSERT INTO DEMO(NAME,GRADE) VALUES('test2',20);
INSERT INTO DEMO(NAME,GRADE) VALUES('test3',30);
INSERT INTO DEMO(NAME,GRADE) VALUES('test4',40);
INSERT INTO DEMO VALUES(10,'test4',40,200);
INSERT INTO DEMO VALUES(101,'test4',40,201);
#执行 select
SELECT * FROM DEMO;
desc DEMO;
show create table DEMO;
show index from DEMO;
#drop Table
drop table DEMO;


DROP TABLE IF EXISTS DEMO;
--enable_warnings
CREATE TABLE DEMO(c1 CHAR(10) NULL DEFAULT 'x');
insert into DEMO values(null);
insert into DEMO values('');
insert into DEMO values('x');
insert into DEMO values('acbdfd');
--error 1406
insert into DEMO values('abdcdedcddfdfdfdfdffddfd');
SELECT * FROM DEMO;
desc DEMO;
show create table DEMO;
show index from DEMO;
SHOW TABLES;
##--replace_result $ENGINE ENGINE " PAGE_CHECKSUM=0" ""
SHOW CREATE TABLE DEMO; DROP TABLE DEMO; SHOW TABLES;

DROP TABLE IF EXISTS DEMO;
--enable_warnings
CREATE TABLE DEMO(ID integer, c1 CHAR(10) NULL DEFAULT 'x');
insert into DEMO values(1,null);
insert into DEMO values(2,'');
insert into DEMO values(3,'x');
insert into DEMO values(4, 'acbdfd');
--error 1406
insert into DEMO values(5,'abdcdedcddfdfdfdfdffddfd');
insert into DEMO(ID) values(6);
SELECT * FROM DEMO;
desc DEMO;
show create table DEMO;
show index from DEMO;
SHOW TABLES;
#--replace_result $ENGINE ENGINE " PAGE_CHECKSUM=0" ""
SHOW CREATE TABLE DEMO; DROP TABLE DEMO; SHOW TABLES;


DROP TABLE IF EXISTS DEMO;
--enable_warnings
CREATE TABLE DEMO(c1 CHAR(10) NULL DEFAULT 'x', c2 int);
insert into DEMO (c2) values(2);
insert into DEMO values('12',3);
insert into DEMO values('',4);
insert into DEMO values(null,5);
SELECT * FROM DEMO;
desc DEMO;
show create table DEMO;
show index from DEMO;
SHOW TABLES;
#--replace_result $ENGINE ENGINE " PAGE_CHECKSUM=0" ""
SHOW CREATE TABLE DEMO; DROP TABLE DEMO; SHOW TABLES;


#create table for decimal (precision, scale) test (c) (创建table过程中添加decimal的精度和范围)
create table DEMO (a decimal(3,1));
insert into DEMO values (1.3);
#ERROR 1264 (22003): Out of range value for column 'a' at row 1
--error 1264
insert into DEMO values (99.99);
insert into DEMO values (99.9);
insert into DEMO values (-99.9);
--error 1264
insert into DEMO values (-99.99);
--error 1264
insert into DEMO values (-99.95);
insert into DEMO values (-99.949);
insert into DEMO values (-99.94);
#执行 select
SELECT * FROM DEMO;
desc DEMO;
show create table DEMO;
show index from DEMO;
#drop Table
drop table DEMO;


#create table for add comment test (创建table过程中添加备注)
create table DEMO (ID integer comment 'user_id', NAME varchar(19) comment 'name', AGE integer DEFAULT 100 comment 'student_age', GRADE real comment 'student_grade');
#select COLUMN_NAME 字段名, column_comment 字段说明, column_type 字段类型,column_key 约束 from information_schema.columns where table_schema = 'demo_db' and table_name = 'DEMO';
insert into DEMO values (1, 'LIOR', 35, 6.9);  
insert into DEMO values (4, 'MIKE', 55, 99.92);  
#执行 select
SELECT * FROM DEMO;
desc DEMO;
show create table DEMO;
show index from DEMO;
#drop Table
drop table DEMO;


#create table for collate (创建table过程中字符序问题，后面还需要添加排序相关的测试)
create table DEMO (NAME varchar(5) COLLATE utf8_unicode_ci);
show full columns from DEMO;
insert into DEMO values ('LIOR');
#执行 select
SELECT * FROM DEMO;
desc DEMO;
show create table DEMO;
show index from DEMO;
#drop Table
drop table DEMO;


#create table for current timestamp 时间戳更新test
create table DEMO (id int NOT NULL AUTO_INCREMENT, name varchar(20) DEFAULT NULL, create_time timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP, last_modify_time timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (id));
insert into DEMO (name) VALUES ('aa'),('bb'),('cc');
UPDATE DEMO SET name = 'ab' WHERE id = 1;
#执行 select,这里不进行select了，避免时间戳差异导致数据结果有差异
#SELECT * FROM DEMO;
desc DEMO;
show create table DEMO;
show index from DEMO;
#drop Table
drop table DEMO;


#create table for truncate table test(清空表)
create table DEMO (ID integer not null, NAME varchar(19), AGE integer, GRADE real);
DESC DEMO;
# insert some data to table.
insert into DEMO values (1, 'LIOR', 35, 6.9);
insert into DEMO values (4, 'MIKE', 55, 99.92);
insert into DEMO values (8, 'ROMAN', 40, 94.1);
insert into DEMO values (16, 'DAN', 60, 1234567890);
insert into DEMO values (32, 'ZVI', 35, 777.666);
insert into DEMO values (1, 'Eitan', NULL, 4.9);
insert into DEMO values (888888, 'zhangdi', NULL, 10000.8);
insert into DEMO values (1131, 'Hisses', 1, NULL);
--error 1048
insert into DEMO values (null, 'ff', 36, 8.9);
#执行 select
SELECT * FROM DEMO;
desc DEMO;
show create table DEMO;
show index from DEMO;
#清空表
truncate DEMO;
#执行 select
SELECT * FROM DEMO;
desc DEMO;
show create table DEMO;
show index from DEMO;
#drop Table
drop table DEMO;


#create table for truncate table test(清空表,带自增的逻辑时，自增值应该被重置)
create table DEMO (ID integer PRIMARY KEY auto_increment , NAME varchar(19), AGE integer, GRADE real);
DESC DEMO;
# insert some data to table.
insert into DEMO values (1, 'LIOR', 35, 6.9);
insert into DEMO values (4, 'MIKE', 55, 99.92);
insert into DEMO values (8, 'ROMAN', 40, 94.1);
insert into DEMO values (16, 'DAN', 60, 1234567890);
insert into DEMO values (32, 'ZVI', 35, 777.666);
--error 1062
#ERROR 1062 (23000): Duplicate entry '1' for key 'DEMO.PRIMARY'
insert into DEMO values (1, 'Eitan', NULL, 4.9);
insert into DEMO values (888888, 'zhangdi', NULL, 10000.8);
insert into DEMO values (1131, 'Hisses', 1, NULL);
insert into DEMO values (null, 'ff', 36, 8.9);
#执行 select
SELECT * FROM DEMO;
desc DEMO;
show create table DEMO;
show index from DEMO;
#清空表
truncate DEMO;
#执行 select
SELECT * FROM DEMO;
#从1开始重新自增
insert into DEMO values (null, 'ff', 36, 8.9);
insert into DEMO values (null, 'ff', 36, 8.9);
insert into DEMO values (null, 'ff', 36, 8.9);
insert into DEMO values (null, 'ff', 36, 8.9);
insert into DEMO values (null, 'ff', 36, 8.9);
desc DEMO;
show create table DEMO;
show index from DEMO;
#drop Table
drop table DEMO;


#create table for check constraint test 创表时添加check约束
create table DEMO (ID integer, NAME varchar(19), AGE integer, GRADE real, SEX char(1), check (5<ID AND ID<10), check (25<AGE AND AGE<30), check (SEX in ('f','m')));
show create table DEMO;
# 插入的ID不在设置范围内，插入失败
--error 3819
insert into DEMO values (12, 'ff', 27, 8.9, 'f');
# 插入的AGE不在设置范围内，插入失败
--error 3819
insert into DEMO values (6, 'ff', 35, 8.9, 'f');
# 插入的SEX不在设置范围内，插入失败
--error 3819
insert into DEMO values (7, 'ff', 26, 8.9, 'a');
# 以下两条在约束范围内可以添加
insert into DEMO values (7, 'ff', 26, 8.9, 'f');
insert into DEMO values (8, 'acd', 28, 2.3, 'm');
#执行 select
SELECT * FROM DEMO;
#drop Table
drop table DEMO;


#create table for enum default 创表设置列属性为ENUM带default
create table DEMO (ID integer, NAME varchar(19), AGE integer, GRADE real, ENABLED enum ('YES','NO')  DEFAULT 'YES');
show create table DEMO;
insert into DEMO values (12, 'ff', 27, 8.9, 'YES');
insert into DEMO values (6, 'ff', 35, 8.9, 'NO');
insert into DEMO values (8, 'ff', 23, 7.7, 'NO');
insert into DEMO values (10, 'ff', 23, 7.7, default);
# 非ENUM值测试
--error 1265
insert into DEMO values (7, 'ff', 26, 8.9, 'f');
--error 1265
insert into DEMO values (9, 'ff', 33, 8.9, '');
#测试alter是否补齐已有行
alter table DEMO add PASSED enum('YES','EXIT','NO') default 'EXIT';
#执行 select
SELECT * FROM DEMO;
#drop Table
drop table DEMO;


#create table for invisible test 创表时设置隐藏列
create table t1 (col1 INT, col2 INT INVISIBLE, col3 INT);
#插入语句
--error 1136
insert into t1 values(1, 2, 3);
--error 1136
insert into t1 values(1);
#插入语句指定相关列，需要reference隐藏的column，
insert into t1 (col1, col2, col3) values (11, 22, 33), (111, 222, 333);
insert into t1 (col1, col2) values (111, 222);
#查询语句 *不包含隐藏字段，col2不会出现在返回结果中
select * from t1;
#显式指定了col2字段，返回结果中包含该隐藏列
select col1, col2, col3 from t1;
drop table t1;


# 创表列名大小写不敏感
--disable_warnings
drop table if exists DEMO_TEST_COL;
drop table if exists DEMO_TEST;
create table DEMO_TEST_COL (ID int(30) primary key, Name varchar(19), age integer, gRade real);
insert into DEMO_TEST_COL values (1, 'LIOR', 35, 6.9);  
select id, NAME, AGE, Grade FROM DEMO_TEST_COL;
alter table DEMO_TEST_COL drop column gRade;
alter table DEMO_TEST_COL drop column AGE;

create table DEMO_TEST (ID int(30) primary key not null, NAME varchar(19) not null, CONSTRAINT id_fk FOREIGN KEY (iD) REFERENCES DEMO_TEST_COL(id), index `m_single_in` (`name`));
show create table DEMO_TEST;
alter table DEMO_TEST drop index M_single_IN;
alter table DEMO_TEST drop FOREIGN key id_fk;
alter table DEMO_TEST drop primary key;
show create table DEMO_TEST;
drop table DEMO_TEST;
drop table DEMO_TEST_COL;

# function column name in many columns
create table t1 (c1 int, c2 int, c3 int, c4 int, c5 int, c6 int, c7 int, c8 int, c9 int, json_STR json, c10 int, key ((json_value(JSON_STR, '$.name' RETURNING char(80) CHARSET utf8mb4))));
drop table t1;
--enable_warnings


##create table for enum 为中文字符并带default
create table DEMO (ID integer, NAME varchar(19), AGE integer, GRADE real, COUNTRY enum('中国','英国','法国') default '法国') default character set UTF8 collate utf8_bin;
show create table DEMO;
insert into DEMO values (12, 'ff', 27, 8.9, '法国');
insert into DEMO values (6, 'ff', 35, 8.9, '英国');
insert into DEMO values (8, 'ff', 23, 7.7, '中国');
insert into DEMO values (10, 'ff', 23, 7.7, default);
# 非ENUM值测试
--error 1265
insert into DEMO values (7, 'ff', 26, 8.9, '日本');
--error 1265
insert into DEMO values (9, 'ff', 33, 8.9, '');
#测试alter是否补齐已有行
alter table DEMO add PASSED enum('通过','未通过','未参加') default '未参加';
#执行 select
SELECT * FROM DEMO;
#drop Table
drop table DEMO;


#create table for enum 为中文字符并带default default为非法ENUM
--error 1067
create table DEMO (ID integer, NAME varchar(19), AGE integer, GRADE real, COUNTRY enum('中国','英国','法国') default '法国1') default character set UTF8 collate utf8_bin;


#create table for enum default default为NULL
create table DEMO (ID integer, NAME varchar(19), AGE integer, GRADE real, ENABLED enum ('YES','NO')  DEFAULT NULL);
show create table DEMO;
insert into DEMO values (12, 'ff', 27, 8.9, 'YES');
insert into DEMO values (6, 'ff', 35, 8.9, 'NO');
insert into DEMO values (8, 'ff', 23, 7.7, 'NO');
insert into DEMO values (10, 'ff', 23, 7.7, default);
# 非ENUM值测试
--error 1265
insert into DEMO values (7, 'ff', 26, 8.9, 'f');
--error 1265
insert into DEMO values (9, 'ff', 33, 8.9, '');
#测试alter是否补齐已有行
alter table DEMO add PASSED enum('YES','EXIT','NO') default NULL;
#执行 select
SELECT * FROM DEMO;
#drop Table
drop table DEMO;


#create table for enum default enum数超过255
create table DEMO (ID integer, ENABLED enum ('0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16',
'17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40',
'41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59','60','61','62','63','64',
'65','66','67','68','69','70','71','72','73','74','75','76','77','78','79','80','81','82','83','84','85','86','87','88',
'89','90','91','92','93','94','95','96','97','98','99','100','101','102','103','104','105','106','107','108','109',
'110','111','112','113','114','115','116','117','118','119','120','121','122','123','124','125','126','127','128','129',
'130','131','132','133','134','135','136','137','138','139','140','141','142','143','144','145','146','147','148','149',
'150','151','152','153','154','155','156','157','158','159','160','161','162','163','164','165','166','167','168','169',
'170','171','172','173','174','175','176','177','178','179','180','181','182','183','184','185','186','187','188','189',
'190','191','192','193','194','195','196','197','198','199','200','201','202','203','204','205','206','207','208','209',
'210','211','212','213','214','215','216','217','218','219','220','221','222','223','224','225','226','227','228','229',
'230','231','232','233','234','235','236','237','238','239','240','241','242','243','244','245','246','247','248','249',
'250','251','252','253','254','255')  DEFAULT '255');
show create table DEMO;
insert into DEMO values (12, '23');
insert into DEMO values (6, '255');
insert into DEMO values (8, default);
# 非ENUM值测试
--error 1265
insert into DEMO values (7, 'f');
--error 1265
insert into DEMO values (9, '');
#测试alter是否补齐已有行
alter table DEMO add PASSED enum('YES','EXIT','NO') default NULL;
#执行 select
SELECT * FROM DEMO;
#drop Table
drop table DEMO;


#create table with foreign key and select 
create table DEMO(uid int NOT NULL AUTO_INCREMENT,name varchar(60) default 'abc',email varchar(60),UNIQUE(uid));
show create table DEMO;
insert into DEMO values(1,'Amy','1001'),(2,'Mike','1002'),(3,'Lily','1003');
SELECT * FROM DEMO;
--error 3978
create table DEMO1 (uid int,foreign key(uid) references DEMO (uid)) as select * from DEMO;
drop table DEMO;


#create table bit column with default 
create table DEMO(a BIT(1) default b'0', b BIT(4) default 11);
show create table DEMO;
insert into DEMO values (1, default);
insert into DEMO values (default, 7);
insert into DEMO values (default, default);
SELECT HEX(a), HEX(b) FROM DEMO;
--error 1406
insert into DEMO values (2, default);
alter table DEMO add c Integer default 90;
alter table DEMO add d varchar(30) default '张三' not null;
alter table DEMO add column e BIT(9) default b'111010010';
alter table DEMO add column f BIT(6) default 63;
insert into DEMO values (1, default, 80, '王五', 63, 45);
insert into DEMO values (default, default, default, default, default, default);
SELECT HEX(a), HEX(b), c, d, HEX(e), HEX(f) FROM DEMO;
drop table DEMO;


#create table enum column with default as select * from table
create table DEMO (ID integer, NAME varchar(19), AGE integer, GRADE real, ENABLED enum ('YES','NO')  DEFAULT 'YES');
show create table DEMO;
insert into DEMO values (12, 'ff', 27, 8.9, 'YES');
insert into DEMO values (6, 'ff', 35, 8.9, 'NO');
insert into DEMO values (8, 'ff', 23, 7.7, 'NO');
insert into DEMO values (10, 'ff', 23, 7.7, default);
create table test as select * from DEMO;
show create table test;
insert into test values (11, 'fff', 99, 90, default);
insert into test values (30, 'qw', 21, 70, 'NO');
#测试alter是否补齐已有行
alter table test add PASSED enum('YES','EXIT','NO') default 'EXIT';
#执行 select
SELECT * FROM test;
drop table DEMO;
drop table test;


#create table enum column with default as select * from system table 
create table setup_actors as select * from performance_schema.setup_actors;
show create table setup_actors;
show create table performance_schema.setup_actors;
drop table setup_actors;


#create table enum column with default like table
create table DEMO (ID integer, NAME varchar(19), AGE integer, GRADE real, ENABLED enum ('YES','NO')  DEFAULT 'YES');
show create table DEMO;
insert into DEMO values (12, 'ff', 27, 8.9, 'YES');
insert into DEMO values (6, 'ff', 35, 8.9, 'NO');
insert into DEMO values (8, 'ff', 23, 7.7, 'NO');
insert into DEMO values (10, 'ff', 23, 7.7, default);
create table test like DEMO;
show create table test;
insert into test values (11, 'fff', 99, 90, default);
insert into test values (30, 'qw', 21, 70, 'NO');
#测试alter是否补齐已有行
alter table test add PASSED enum('YES','EXIT','NO') default 'EXIT';
#执行 select
SELECT * FROM test;
drop table DEMO;
drop table test;


#create table enum column with default like system table error
--error 1683
create table setup_actors like performance_schema.setup_actors;


# create table enum column with default set CHARSET
CREATE TABLE t1 (
  status enum('active','passive') character set utf16 collate utf16_general_ci 
    NOT NULL default 'passive'
);
SHOW CREATE TABLE t1;
ALTER TABLE t1 ADD a int NOT NULL; 
SHOW CREATE TABLE t1;
DROP TABLE t1;


# create table enum column with default
SET NAMES latin1;
--character_set latin1
CREATE TABLE t1 (`Д` CHAR(128) DEFAULT 'Д', `Д1` ENUM('Д1','Д2') DEFAULT 'Д2');
SHOW CREATE TABLE t1;
SHOW COLUMNS FROM t1;
insert into t1 values(default,default);
select * from t1;
alter table t1 add column `ä1` ENUM('ä1','ä2') DEFAULT 'ä2';
select * from t1;
drop table t1;
SET NAMES default;


#create table set column with default
CREATE TABLE t1 (
  id int(10) unsigned NOT NULL auto_increment,
  val enum('one','two','three') NOT NULL default 'one',
  PRIMARY KEY  (id)
) ENGINE=CTC DEFAULT CHARSET=utf8;
INSERT INTO t1 VALUES (1,'one'),(2,'two'),(3,'three'),(4,'one'),(5,'two');
select val, count(*) from t1 group by val;
drop table t1;


##create table for set 为中文字符并带default
create table DEMO (ID integer, NAME varchar(19), AGE integer, GRADE real, COUNTRY set('中国','英国','法国') default '法国') default character set UTF8 collate utf8_bin;
show create table DEMO;
insert into DEMO values (12, 'ff', 27, 8.9, '法国');
insert into DEMO values (6, 'ff', 35, 8.9, '英国');
insert into DEMO values (8, 'ff', 23, 7.7, '中国');
insert into DEMO values (10, 'ff', 23, 7.7, default);
insert into DEMO values (9, 'ff', 33, 8.9, '');
# 非ENUM值测试
--error 1265
insert into DEMO values (7, 'ff', 26, 8.9, '日本');
#测试alter是否补齐已有行
alter table DEMO add PASSED set('通过','未通过','未参加') default '未参加';
#执行 select
SELECT * FROM DEMO;
#drop Table
drop table DEMO;


#create table for set 为中文字符并带default default为非法set
--error 1067
create table DEMO (ID integer, NAME varchar(19), AGE integer, GRADE real, COUNTRY set('中国','英国','法国') default '法国1') default character set UTF8 collate utf8_bin;


#create table for set default default为NULL
create table DEMO (ID integer, NAME varchar(19), AGE integer, GRADE real, ENABLED set ('YES','NO')  DEFAULT NULL);
show create table DEMO;
insert into DEMO values (12, 'ff', 27, 8.9, 'YES');
insert into DEMO values (6, 'ff', 35, 8.9, 'NO');
insert into DEMO values (8, 'ff', 23, 7.7, 'NO');
insert into DEMO values (10, 'ff', 23, 7.7, default);
insert into DEMO values (9, 'ff', 33, 8.9, '');
# 非set值测试
--error 1265
insert into DEMO values (7, 'ff', 26, 8.9, 'f');
#测试alter是否补齐已有行
alter table DEMO add PASSED set('YES','EXIT','NO') default NULL;
#执行 select
SELECT * FROM DEMO;
#drop Table
drop table DEMO;


#create table for set default set数为64 并多个default
create table DEMO (ID integer, ENABLED set ('0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16',
'17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40',
'41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59','60','61','62','63')
DEFAULT '0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16');
show create table DEMO;
insert into DEMO values (12, '23');
insert into DEMO values (6, '63,12,3,4,5,6,7,8');
insert into DEMO values (8, default);
insert into DEMO values (9, '');
# 非set值测试
--error 1265
insert into DEMO values (7, 'f');
#测试alter是否补齐已有行
alter table DEMO add PASSED set('YES','EXIT','NO') default 'YES,NO';
insert into DEMO values (20, default, default);
#执行 select
SELECT * FROM DEMO;
#drop Table
drop table DEMO;


#create table set column with default like table
create table DEMO (ID integer, NAME varchar(19), AGE integer, GRADE real, ENABLED set ('YES','NO','NONE')  DEFAULT 'YES,NONE');
show create table DEMO;
insert into DEMO values (12, 'ff', 27, 8.9, 'YES');
insert into DEMO values (6, 'ff', 35, 8.9, 'NO');
insert into DEMO values (8, 'ff', 23, 7.7, 'NO');
insert into DEMO values (10, 'ff', 23, 7.7, default);
create table test like DEMO;
show create table test;
insert into test values (11, 'fff', 99, 90, default);
insert into test values (30, 'qw', 21, 70, 'NO');
#测试alter是否补齐已有行
alter table test add PASSED set('YES','EXIT','NO') default 'EXIT';
#执行 select
SELECT * FROM test;
drop table DEMO;
drop table test;


#create table set column with default as select table
create table DEMO (ID integer, NAME varchar(19), AGE integer, GRADE real, ENABLED set ('YES','NO','NONE')  DEFAULT 'YES,NONE');
show create table DEMO;
insert into DEMO values (12, 'ff', 27, 8.9, 'YES');
insert into DEMO values (6, 'ff', 35, 8.9, 'NO');
insert into DEMO values (8, 'ff', 23, 7.7, 'NO');
insert into DEMO values (10, 'ff', 23, 7.7, default);
create table test as select * from DEMO;
show create table test;
SELECT * FROM test;
#测试alter是否补齐已有行
alter table test add PASSED set('YES','EXIT','NO') default 'EXIT';
#执行 select
SELECT * FROM test;
drop table DEMO;
drop table test;


# create table set column with default set CHARSET
CREATE TABLE t1 (
  status set('active','passive') character set utf16 collate utf16_general_ci 
    NOT NULL default 'passive'
);
SHOW CREATE TABLE t1;
insert into t1 values(default);
ALTER TABLE t1 ADD a int default 2 NOT NULL; 
insert into t1 values(default, 1);
SHOW CREATE TABLE t1;
select * from t1;
DROP TABLE t1;


# create table set column with default
SET NAMES latin1;
--character_set latin1
CREATE TABLE t1 (`Д` CHAR(128) DEFAULT 'Д', `Д1` set('Д1','Д2') DEFAULT 'Д2');
SHOW CREATE TABLE t1;
SHOW COLUMNS FROM t1;
insert into t1 values(default,default);
select * from t1;
alter table t1 add column `ä1` set('ä1','ä2','ä3') DEFAULT 'ä2,ä3';
select * from t1;
drop table t1;
SET NAMES default;


# binary with defaut
create table t1(a int, b binary(5) not null DEFAULT b'101');
show create table t1;
insert into t1 values(1,default),(2,default),(3,b'100');
alter table t1 add column c binary not null default b'1101';
show create table t1;
insert into t1 values(4,default,default);
select hex(a),hex(b),hex(c) from t1;
drop table t1;


# varbinary with default
create table t1(a varchar(3) default 'abc', b varbinary(5) not null DEFAULT b'101');
show create table t1;
insert into t1 values('a',default),('2',default),(default,b'100');
alter table t1 add column c varbinary(2) not null default b'1101';
show create table t1;
insert into t1 values('cd',default,default);
select hex(a),hex(b),hex(c) from t1;
drop table t1;


#default expression
CREATE TABLE t(d DOUBLE DEFAULT (UUID()));
show create table t;
insert into t values(10.0);
--error 1265 
insert into t values(default);
select * from t;
drop table t;


CREATE TABLE t(d varchar(20) DEFAULT (abs(-2)));
show create table t;
insert into t values(default);
select * from t;
drop table t;


create table t(d BLOB DEFAULT (UUID()));
show create table t;
insert into t values(default);
drop table t;


create table t1(a varchar(8000) default (repeat('a',8000)), b double default (rand(6)));
show create table t1;
insert into t1 values(default, default), (default, default);
alter table t1 add column c double default (radians(-45));
alter table t1 add column d double default (pi());
select length(a),b,c,d from t1;
drop table t1;


create table t1(c int, key idx ((radians(c))));
show create table t1;
insert into t1 values(3);
insert into t1 values(180);
insert into t1 values(180*pi());
select radians(c) from t1;
insert into t1 values(180/pi());
select c from t1 where radians(c)=3.141592653589793;
drop table t1;


CREATE TABLE t1 (a varchar(30) binary NOT NULL DEFAULT ' ', b varchar(1) binary NOT NULL DEFAULT ' ') ENGINE=CTC DEFAULT CHARACTER SET = latin1;
show create table t1;
insert into t1 values(default,default),(default,default);
alter table t1 add column c varchar(1)  NOT NULL DEFAULT ' ';
select * from t1;
drop table t1;


CREATE TABLE test_set (s SET('one','two','three','four','five','six','seven','eight','nine','ten','eleven','twelve','thirteen','fourteen','fifteen','sixteen','seventeen','eightteen','nineteen','twenty','thirty','forty','fifty','sixty','seventy','eightty','ninety'));
INSERT INTO test_set VALUES ('one,two');
INSERT INTO test_set VALUES ('one,two,three,four,five,six,seven,eight,nine,ten,eleven,twelve,thirteen,fourteen,fifteen,sixteen,seventeen,eightteen,nineteen');
INSERT INTO test_set VALUES ('one,two,three,four,five,six,seven,eight,nine,ten,eleven,twelve,thirteen,fourteen,fifteen,sixteen,seventeen,eightteen,nineteen,twenty,thirty,forty,fifty,sixty,seventy,eightty,ninety');
SELECT * FROM test_set;
drop table test_set;


CREATE TABLE test_set (s SET('one','two','three','four','five','six','seven','eight','nine','ten','eleven','twelve','thirteen','fourteen','fifteen','sixteen','seventeen','eightteen','nineteen','twenty','thirty','forty','fifty','sixty','seventy','eightty','ninety'),key (s));
INSERT INTO test_set VALUES ('one,two');
INSERT INTO test_set VALUES ('one,two,three,four,five,six,seven,eight,nine,ten,eleven,twelve,thirteen,fourteen,fifteen,sixteen,seventeen,eightteen,nineteen');
INSERT INTO test_set VALUES ('one,two,three,four,five,six,seven,eight,nine,ten,eleven,twelve,thirteen,fourteen,fifteen,sixteen,seventeen,eightteen,nineteen,twenty,thirty,forty,fifty,sixty,seventy,eightty,ninety');
EXPLAIN SELECT s FROM test_set where s=('one,two,three,four,five,six,seven,eight,nine,ten,eleven,twelve,thirteen,fourteen,fifteen,sixteen,seventeen,eightteen,nineteen,twenty,thirty,forty,fifty,sixty,seventy,eightty,ninety');
SELECT s FROM test_set where s=('one,two,three,four,five,six,seven,eight,nine,ten,eleven,twelve,thirteen,fourteen,fifteen,sixteen,seventeen,eightteen,nineteen,twenty,thirty,forty,fifty,sixty,seventy,eightty,ninety');
drop table test_set;


CREATE TABLE t1 (i int);
INSERT INTO t1(i) VALUES (1),(2);
ALTER TABLE t1 ADD COLUMN b JSON DEFAULT (JSON_ARRAY());
ALTER TABLE t1 ADD COLUMN c JSON DEFAULT (JSON_ARRAY(1));
show create table t1;
select * from t1;
drop table t1;


CREATE TABLE t1(
name char(20) DEFAULT 'OBrien',
name1 char(20) DEFAULT 'O''''''Brien',
name2 char(20) DEFAULT 'O''Bri''''en',
name3 char(20) DEFAULT 'O""Brien',
name4 char(20) DEFAULT 'O\'\'\'Brien',
name5 varchar(20) DEFAULT 'OBrien',
name6 varchar(20) DEFAULT 'O''''Brien',
name7 varchar(20) DEFAULT 'O''''Bri''''en'
);
show full columns from t1;
drop table t1;

CREATE TABLE t1 (a int);
INSERT INTO t1 VALUES (1),(2),(1);
--error 1062
CREATE TEMPORARY TABLE t2 ( PRIMARY KEY (a) ) ENGINE=CTC SELECT a FROM t1;
drop table t1;