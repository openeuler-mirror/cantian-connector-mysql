drop table if exists DEMO;
create table DEMO (ID integer not null, NAME varchar(19), AGE integer, GRADE real);
insert into DEMO values (1, 'LIOR', 35, 6.9);
insert into DEMO values (4, 'MIKE', 55, 99.92);
insert into DEMO values (8, 'ROMAN', 40, 94.1);
insert into DEMO values (16, 'DAN', 60, 1234567890);
insert into DEMO values (32, 'ZVI', 35, 777.666);
insert into DEMO values (1, 'Eitan', NULL, 4.9);
insert into DEMO values (888888, 'zhangdi', NULL, 10000.8);
insert into DEMO values (1131, 'Hisses', 1, NULL);
create index idx_id ON DEMO (ID);
analyze table DEMO;
Table	Op	Msg_type	Msg_text
test.DEMO	analyze	status	OK
select * from DEMO where ID = 1;
ID	NAME	AGE	GRADE
1	LIOR	35	6.9
1	Eitan	NULL	4.9
select * from DEMO where ID >= 1;
ID	NAME	AGE	GRADE
1	LIOR	35	6.9
1	Eitan	NULL	4.9
4	MIKE	55	99.92
8	ROMAN	40	94.1
16	DAN	60	1234567890
32	ZVI	35	777.666
1131	Hisses	1	NULL
888888	zhangdi	NULL	10000.8
select * from DEMO where ID <= 10;
ID	NAME	AGE	GRADE
1	LIOR	35	6.9
1	Eitan	NULL	4.9
4	MIKE	55	99.92
8	ROMAN	40	94.1
select * from DEMO where ID >= 1 AND ID <= 10;
ID	NAME	AGE	GRADE
1	LIOR	35	6.9
1	Eitan	NULL	4.9
4	MIKE	55	99.92
8	ROMAN	40	94.1
create table t1(a1 int, a2 int,a3 int,a4 int,a5 int,a6 int,a7 int,a8 int, a9 int,a10 int,
a11 int,a12 int,a13 int,a14 int,a15 int,a16 int,a17 int,a18 int,a19 int,a20 int,a21 int,
a22 int,a23 int,a24 int,a25 int,a26 int,a27 int,a28 int,a29 int,a30 int,a31 int,a32 int,
a33 int,a34 int,a35 int,a36 int,a37 int,a38 int,a39 int,a40 int,a41 int,a42 int,a43 int,
a44 int,a45 int,a46 int,a47 int,a48 int,a49 int,a50 int,a51 int,a52 int,a53 int,a54 int,
a55 int,a56 int,a57 int,a58 int,a59 int,a60 int,a61 int,a62 int,a63 int,a64 int,a65 int,
a66 int,a67 int,a68 int,a69 int,a70 int,a71 int,a72 int,a73 int,a74 int,a75 int,a76 int,
a77 int,a78 int,a79 int,a80 int,a81 int,a82 int,a83 int,a84 int,a85 int,a86 int,a87 int,
a88 int,a89 int,a90 int,a91 int,a92 int,a93 int,a94 int,a95 int,a96 int,a97 int,a98 int
)PARTITION BY HASH (`a1`) PARTITIONS 1024;
insert into t1 values(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,
26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,
55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,
84,85,86,87,88,89,90,91,92,93,94,95,96,97,98);
insert into t1 values(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,
26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,
55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,
84,85,86,87,88,89,90,91,92,93,94,95,96,97,98);
select a1 from t1 where a1 = 1;
a1
1
1
analyze table t1;
Table	Op	Msg_type	Msg_text
test.t1	analyze	status	OK
explain select a1 from t1 where a1 = 1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	p1	ALL	NULL	NULL	NULL	NULL	2	50.00	Using where; Using pushed condition (`test`.`t1`.`a1` = 1)
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a1` AS `a1` from `test`.`t1` where (`test`.`t1`.`a1` = 1)
drop table t1;
drop table DEMO;
create table t1(
c30 BIGINT
)partition by range(c30)
subpartition by hash(c30) subpartitions 2(
partition p0 values less than (1000000),
partition p1 values less than (2000000),
partition p2 values less than (6000000)
);
alter table t1 analyze Partition p1;
Table	Op	Msg_type	Msg_text
test.t1	analyze	status	OK
drop table if exists t1;
create table t1(
a int not null,
b varchar(500) default null,
primary Key(a)
)
PARTITION by range(`a`)
SUBPARTITION by HASH(`a`)
(PARTITION p0 values less than(100)
(SUBPARTITION sp0,
SUBPARTITION sp1),
PARTITION p1 values less than MAXVALUE
(SUBPARTITION sp2,
SUBPARTITION sp3));
alter table t1 analyze partition sp3;
Table	Op	Msg_type	Msg_text
test.t1	analyze	status	OK
drop table if exists t1;
create table t1(
a int not null,
b varchar(500) default null,
primary Key(a)
)
PARTITION by range(`a`)
(PARTITION p0 values less than(100),
PARTITION p1 values less than MAXVALUE);
alter table t1 analyze partition p0;
Table	Op	Msg_type	Msg_text
test.t1	analyze	status	OK
drop table t1;